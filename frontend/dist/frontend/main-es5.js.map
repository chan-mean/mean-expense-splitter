{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.service.ts","webpack:///src/app/dashboard/balances/balances.component.ts","webpack:///src/app/dashboard/balances/balances.component.html","webpack:///src/app/dashboard/dashboard.module.ts","webpack:///src/app/dashboard/expense-details/expense-details.component.ts","webpack:///src/app/dashboard/expense-details/expense-details.component.html","webpack:///src/app/dashboard/expense-view/expense-view.component.ts","webpack:///src/app/dashboard/expense-view/expense-view.component.html","webpack:///src/app/dashboard/group-details/group-details.component.ts","webpack:///src/app/dashboard/group-details/group-details.component.html","webpack:///src/app/dashboard/groups/groups.component.ts","webpack:///src/app/dashboard/groups/groups.component.html","webpack:///src/app/dashboard/new-group/new-group.component.ts","webpack:///src/app/dashboard/new-group/new-group.component.html","webpack:///src/app/dashboard/users-list/users-list.component.ts","webpack:///src/app/dashboard/users-list/users-list.component.html","webpack:///src/app/data.service.ts","webpack:///src/app/shared/header/header.component.ts","webpack:///src/app/shared/header/header.component.html","webpack:///src/app/shared/home/home.component.ts","webpack:///src/app/shared/home/home.component.html","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/socket.service.ts","webpack:///src/app/user/login/login.component.ts","webpack:///src/app/user/login/login.component.html","webpack:///src/app/user/signup/signup.component.ts","webpack:///src/app/user/signup/signup.component.html","webpack:///src/app/user/user.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts","webpack:///ws (ignored)"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","AppModule","forRoot","path","component","pathMatch","redirectTo","declarations","imports","providers","bootstrap","AppService","http","url","location","hostname","getUserInfoFromLocalStorage","localStorage","getItem","JSON","parse","setUserInfoToLocalStorage","data","setItem","stringify","params","set","firstName","lastName","isAdmin","userName","emailAddress","password","countryCode","mobileNumber","post","userId","authToken","verifyingCode","get","groupName","category","description","groupId","usersInGroup","headers","append","expenseName","amount","transactionDate","notes","lendingUserId","lendingAmount","borrowingData","expenseHistory","expenseId","expenseHistoryData","providedIn","BalancesComponent","appService","toastr","router","memberIds","borrowingInfo","borrowingObj","borrowingArr","totalBorrowingObj","lendingInfo","lendingObj","lendingArr","totalLendingObj","totalBalanceObj","totalBalanceArr","balanceObj","balanceArr","loadDetails","getUsersByGroup","subscribe","apiResponse","status","membersInGroup","forEach","x","push","y","getAmountDetailsByGroup","borrowedData","filter","borrowingUserId","z","parseFloat","borrowingAmount","lendedData","i","j","roundToTwoDigits","firstMemberId","firstMemberName","getMemberName","firstPrompt","balanceAmount","Math","abs","secondPrompt","secondMemberId","secondMemberName","thirdPrompt","memberId","memberName","filterMember","memberDetails","find","num","round","Number","EPSILON","DashboardModule","forChild","ExpenseDetailsComponent","modal","socketService","categories","createInd","updateInd","membersIncluded","membersIncludedIds","historyData","exisitngMemberIds","createExpense","validateFields","userInfo","length","key","createExpenseAndAmount","success","window","history","back","notify","error","includeMember","open","memberModal","size","removeMember","remove","removeByAttr","arr","value","index","indexOf","splice","attr","updateExpense","trackChanges","updateExpenseAndAmount","exisitnglendingUserId","oldData","includes","message","emit","warning","expenseData","getExpenseDetails","amountData","getAmountDetailsByExpense","fullName","close","checkedList","document","querySelectorAll","nextSibling","textContent","loadExpenseDetails","ExpenseViewComponent","borrowingMemberData","expenseDetails","deleteInd","lendingMemberName","map","borrowingMemberId","borrowingMemberName","getHistoryDetailsByExpense","reverse","getMembers","navigate","deleteExpense","deleteExpenseAndAmount","openDeleteConfirmation","deleteModal","centered","result","formatDate","date","dateFormat","Date","monthDate","getDate","monthNames","stringDate","getMonth","getFullYear","GroupDetailsComponent","viewUsers","addExpense","getAllExpensesByGroup","expenses","goToExpenseDetails","goToBalances","getCategoryIcon","GroupsComponent","getAllGroupsByUser","groups","newGroup","goToGroupDetails","NewGroupComponent","defaultCategory","create","addUserWithGroupOperations","UsersListComponent","usersNotInGroup","addInd","countChecked","addUser","getUsersNotInGroup","userModal","getUsersInGroup","DataService","jsonFiles","getCodeList","callback","response","json","getCountryList","HeaderComponent","logOut","info","listen","HomeComponent","initOnLoad","SharedModule","SocketService","eventName","observer","socket","on","next","LoginComponent","spinInd","codeInd","passwordInd","logIn","userDetails","show","enterKey","event","keyCode","sendMail","verifyCode","newPassword","confirmNewPassword","findEmailAndUpdatePassword","getElementById","click","addEventListener","submit","SignupComponent","countryList","codeList","countryCodeList","signUp","countries","countryArray","Object","entries","country","codes","codeArray","item","assign","sort","a","b","fetchCountryCodeList","UserModule","environment","production","bootstrapModule","err","console"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaC,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,kBAAR;AAED,K;;;uBAHYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;;;;;;;;sEDOaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA0CaC,S;;;;;YAAAA,S;AAAS,kBAFR,4DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,CAAC,uDAAD,EAAa,0DAAb,EAAyB,8DAAzB,C;AAAuC,gBAfzC,CACP,uEADO,EAEP,qEAFO,EAGP,wDAHO,EAIP,0DAJO,EAKP,4FALO,EAMP,4DANO,EAOP,kEAPO,EAQP,4EARO,EASP,6DAAaC,OAAb,CAAqB,CACnB;AAAEC,YAAI,EAAE,OAAR;AAAiBC,iBAAS,EAAE,2EAA5B;AAA4CC,iBAAS,EAAE;AAAvD,OADmB,EAEnB;AAAEF,YAAI,EAAE,QAAR;AAAkBC,iBAAS,EAAE,mFAA7B;AAA8CC,iBAAS,EAAE;AAAzD,OAFmB,EAGnB;AAAEF,YAAI,EAAE,EAAR;AAAYG,kBAAU,EAAE,OAAxB;AAAiCD,iBAAS,EAAE;AAA5C,OAHmB,CAArB,CATO,CAeyC;;;;0HAGvCJ,S,EAAS;AAAA,uBApBlB,4DAoBkB;AApBN,kBAGZ,uEAHY,EAIZ,qEAJY,EAKZ,wDALY,EAMZ,0DANY,EAOZ,4FAPY,EAQZ,4DARY,EASZ,kEATY,EAUZ,4EAVY,EAUG,4DAVH;AAoBM,O;AAVH,K;;;;;sEAUNA,S,EAAS;cAtBrB,sDAsBqB;eAtBZ;AACRM,sBAAY,EAAE,CACZ,4DADY,CADN;AAIRC,iBAAO,EAAE,CACP,uEADO,EAEP,qEAFO,EAGP,wDAHO,EAIP,0DAJO,EAKP,4FALO,EAMP,4DANO,EAOP,kEAPO,EAQP,4EARO,EASP,6DAAaN,OAAb,CAAqB,CACnB;AAAEC,gBAAI,EAAE,OAAR;AAAiBC,qBAAS,EAAE,2EAA5B;AAA4CC,qBAAS,EAAE;AAAvD,WADmB,EAEnB;AAAEF,gBAAI,EAAE,QAAR;AAAkBC,qBAAS,EAAE,mFAA7B;AAA8CC,qBAAS,EAAE;AAAzD,WAFmB,EAGnB;AAAEF,gBAAI,EAAE,EAAR;AAAYG,sBAAU,EAAE,OAAxB;AAAiCD,qBAAS,EAAE;AAA5C,WAHmB,CAArB,CATO,CAJD;AAmBRI,mBAAS,EAAE,CAAC,uDAAD,EAAa,0DAAb,EAAyB,8DAAzB,CAnBH;AAoBRC,mBAAS,EAAE,CAAC,4DAAD;AApBH,S;AAsBY,Q;;;;;;;;;;;;;;;;;;AC1CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,U;AAIX,0BAAmBC,IAAnB,EAAqC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAFX,aAAAC,GAAA,oBAAwBC,QAAQ,CAACC,QAAjC;;AA2BD,aAAAC,2BAAA,GAAmC,YAAM;AAC9C,cAAIC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAJ,EACE,OAAOC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAP;AACH,SAHM;;AAKA,aAAAG,yBAAA,GAAiC,UAACC,IAAD,EAAU;AAChDL,sBAAY,CAACM,OAAb,CAAqB,UAArB,EAAiCJ,IAAI,CAACK,SAAL,CAAeF,IAAf,CAAjC;AACD,SAFM;AA9BiC;;;;+BAE1BA,I,EAAI;AAChB,cAAMG,MAAM,GAAG,IAAI,+DAAJ,GACZC,GADY,CACR,WADQ,EACKJ,IAAI,CAACK,SADV,EAEZD,GAFY,CAER,UAFQ,EAEIJ,IAAI,CAACM,QAFT,EAGZF,GAHY,CAGR,SAHQ,EAGGJ,IAAI,CAACO,OAHR,EAIZH,GAJY,CAIR,UAJQ,EAIIJ,IAAI,CAACQ,QAJT,EAKZJ,GALY,CAKR,cALQ,EAKQJ,IAAI,CAACS,YALb,EAMZL,GANY,CAMR,UANQ,EAMIJ,IAAI,CAACU,QANT,EAOZN,GAPY,CAOR,aAPQ,EAOOJ,IAAI,CAACW,WAPZ,EAQZP,GARY,CAQR,cARQ,EAQQJ,IAAI,CAACY,YARb,CAAf;AAUA,iBAAO,KAAKtB,IAAL,CAAUuB,IAAV,WAAkB,KAAKtB,GAAvB,2BAAkDY,MAAlD,CAAP;AAED;;;8BAEYH,I,EAAI;AACf,cAAMG,MAAM,GAAG,IAAI,+DAAJ,GACZC,GADY,CACR,cADQ,EACQJ,IAAI,CAACS,YADb,EAEZL,GAFY,CAER,UAFQ,EAEIJ,IAAI,CAACU,QAFT,CAAf;AAIA,iBAAO,KAAKpB,IAAL,CAAUuB,IAAV,WAAkB,KAAKtB,GAAvB,0BAAiDY,MAAjD,CAAP;AACD;;;+BAWaH,I,EAAI;AAChB,cAAMG,MAAM,GAAG,IAAI,+DAAJ,GACZC,GADY,CACR,QADQ,EACEJ,IAAI,CAACc,MADP,EAEZV,GAFY,CAER,WAFQ,EAEKJ,IAAI,CAACe,SAFV,CAAf;AAIA,iBAAO,KAAKzB,IAAL,CAAUuB,IAAV,WAAkB,KAAKtB,GAAvB,2BAAkDY,MAAlD,CAAP;AACD;;;iCAEeM,Y,EAAY;AAC1B,cAAMN,MAAM,GAAG,IAAI,+DAAJ,GACZC,GADY,CACR,cADQ,EACQK,YADR,CAAf;AAGA,iBAAO,KAAKnB,IAAL,CAAUuB,IAAV,WAAkB,KAAKtB,GAAvB,mCAA0DY,MAA1D,CAAP;AACD;;;mCAEiBH,I,EAAI;AACpB,cAAMG,MAAM,GAAG,IAAI,+DAAJ,GACZC,GADY,CACR,cADQ,EACQJ,IAAI,CAACS,YADb,EAEZL,GAFY,CAER,eAFQ,EAESJ,IAAI,CAACgB,aAFd,CAAf;AAIA,iBAAO,KAAK1B,IAAL,CAAUuB,IAAV,WAAkB,KAAKtB,GAAvB,+BAAsDY,MAAtD,CAAP;AACD;;;mDAEiCH,I,EAAI;AACpC,cAAMG,MAAM,GAAG,IAAI,+DAAJ,GACZC,GADY,CACR,cADQ,EACQJ,IAAI,CAACS,YADb,EAEZL,GAFY,CAER,UAFQ,EAEIJ,IAAI,CAACU,QAFT,CAAf;AAIA,iBAAO,KAAKpB,IAAL,CAAUuB,IAAV,WAAkB,KAAKtB,GAAvB,mCAA0DY,MAA1D,CAAP;AACD;;;2CAEyBH,I,EAAI;AAC5B,iBAAO,KAAKV,IAAL,CAAU2B,GAAV,WAAiB,KAAK1B,GAAtB,4BAA2CS,IAAI,CAACc,MAAhD,iCAA6Ed,IAAI,CAACe,SAAlF,EAAP;AACD;;;mDAEiCf,I,EAAI;AACpC,cAAMG,MAAM,GAAG,IAAI,+DAAJ,GACZC,GADY,CACR,WADQ,EACKJ,IAAI,CAACkB,SADV,EAEZd,GAFY,CAER,UAFQ,EAEIJ,IAAI,CAACmB,QAFT,EAGZf,GAHY,CAGR,aAHQ,EAGOJ,IAAI,CAACoB,WAHZ,EAIZhB,GAJY,CAIR,QAJQ,EAIEJ,IAAI,CAACc,MAJP,EAKZV,GALY,CAKR,WALQ,EAKKJ,IAAI,CAACe,SALV,CAAf;AAOA,iBAAO,KAAKzB,IAAL,CAAUuB,IAAV,WAAkB,KAAKtB,GAAvB,sCAAsDS,IAAI,CAACqB,OAA3D,GAAsElB,MAAtE,CAAP;AACD;;;wCAEsBH,I,EAAI;AACzB,iBAAO,KAAKV,IAAL,CAAU2B,GAAV,WAAiB,KAAK1B,GAAtB,4BAA2CS,IAAI,CAACqB,OAAhD,yBAAsErB,IAAI,CAACsB,YAA3E,wBAAqGtB,IAAI,CAACe,SAA1G,EAAP;AACD;;;8CAE4Bf,I,EAAI;AAC/B,iBAAO,KAAKV,IAAL,CAAU2B,GAAV,WAAiB,KAAK1B,GAAtB,8BAA6CS,IAAI,CAACqB,OAAlD,iCAAgFrB,IAAI,CAACe,SAArF,EAAP;AACD;;;+CAE6Bf,I,EAAI;AAChC,cAAMuB,OAAO,GAAG,IAAI,gEAAJ,EAAhB;AACAA,iBAAO,CAACC,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,cAAMrB,MAAM,GAAG,IAAI,+DAAJ,GACZC,GADY,CACR,aADQ,EACOJ,IAAI,CAACyB,WADZ,EAEZrB,GAFY,CAER,UAFQ,EAEIJ,IAAI,CAACmB,QAFT,EAGZf,GAHY,CAGR,QAHQ,EAGEJ,IAAI,CAAC0B,MAHP,EAIZtB,GAJY,CAIR,iBAJQ,EAIWJ,IAAI,CAAC2B,eAJhB,EAKZvB,GALY,CAKR,OALQ,EAKCJ,IAAI,CAAC4B,KALN,EAMZxB,GANY,CAMR,SANQ,EAMGJ,IAAI,CAACqB,OANR,EAOZjB,GAPY,CAOR,eAPQ,EAOSJ,IAAI,CAAC6B,aAPd,EAQZzB,GARY,CAQR,eARQ,EAQSJ,IAAI,CAAC8B,aARd,EASZ1B,GATY,CASR,eATQ,EASSP,IAAI,CAACK,SAAL,CAAeF,IAAI,CAAC+B,aAApB,CATT,EAUZ3B,GAVY,CAUR,gBAVQ,EAUUJ,IAAI,CAACgC,cAVf,EAWZ5B,GAXY,CAWR,WAXQ,EAWKJ,IAAI,CAACe,SAXV,CAAf;AAaA,iBAAO,KAAKzB,IAAL,CAAUuB,IAAV,WAAkB,KAAKtB,GAAvB,8BAAqDY,MAArD,EAA6D;AAAEoB,mBAAO,EAAEA;AAAX,WAA7D,CAAP;AACD;;;kDAEgCvB,I,EAAI;AACnC,iBAAO,KAAKV,IAAL,CAAU2B,GAAV,WAAiB,KAAK1B,GAAtB,8BAA6CS,IAAI,CAACiC,SAAlD,oCAAqFjC,IAAI,CAACe,SAA1F,EAAP;AACD;;;0CAEwBf,I,EAAI;AAC3B,iBAAO,KAAKV,IAAL,CAAU2B,GAAV,WAAiB,KAAK1B,GAAtB,8BAA6CS,IAAI,CAACiC,SAAlD,6BAA8EjC,IAAI,CAACe,SAAnF,EAAP;AACD;;;+CAE6Bf,I,EAAI;AAChC,cAAMuB,OAAO,GAAG,IAAI,gEAAJ,EAAhB;AACAA,iBAAO,CAACC,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACA,cAAMrB,MAAM,GAAG,IAAI,+DAAJ,GACZC,GADY,CACR,WADQ,EACKJ,IAAI,CAACiC,SADV,EAEZ7B,GAFY,CAER,aAFQ,EAEOJ,IAAI,CAACyB,WAFZ,EAGZrB,GAHY,CAGR,UAHQ,EAGIJ,IAAI,CAACmB,QAHT,EAIZf,GAJY,CAIR,QAJQ,EAIEJ,IAAI,CAAC0B,MAJP,EAKZtB,GALY,CAKR,iBALQ,EAKWJ,IAAI,CAAC2B,eALhB,EAMZvB,GANY,CAMR,OANQ,EAMCJ,IAAI,CAAC4B,KANN,EAOZxB,GAPY,CAOR,SAPQ,EAOGJ,IAAI,CAACqB,OAPR,EAQZjB,GARY,CAQR,eARQ,EAQSJ,IAAI,CAAC6B,aARd,EASZzB,GATY,CASR,eATQ,EASSJ,IAAI,CAAC8B,aATd,EAUZ1B,GAVY,CAUR,eAVQ,EAUSP,IAAI,CAACK,SAAL,CAAeF,IAAI,CAAC+B,aAApB,CAVT,EAWZ3B,GAXY,CAWR,oBAXQ,EAWcP,IAAI,CAACK,SAAL,CAAeF,IAAI,CAACkC,kBAApB,CAXd,EAYZ9B,GAZY,CAYR,WAZQ,EAYKJ,IAAI,CAACe,SAZV,CAAf;AAcA,iBAAO,KAAKzB,IAAL,CAAUuB,IAAV,WAAkB,KAAKtB,GAAvB,8BAAqDY,MAArD,EAA6D;AAAEoB,mBAAO,EAAEA;AAAX,WAA7D,CAAP;AACD;;;+CAE6BvB,I,EAAI;AAChC,cAAMG,MAAM,GAAG,IAAI,+DAAJ,GACZC,GADY,CACR,WADQ,EACKJ,IAAI,CAACiC,SADV,EAEZ7B,GAFY,CAER,aAFQ,EAEOJ,IAAI,CAACyB,WAFZ,EAGZrB,GAHY,CAGR,WAHQ,EAGKJ,IAAI,CAACe,SAHV,CAAf;AAKA,iBAAO,KAAKzB,IAAL,CAAUuB,IAAV,WAAkB,KAAKtB,GAAvB,8BAAqDY,MAArD,CAAP;AACD;;;gDAE8BH,I,EAAI;AACjC,iBAAO,KAAKV,IAAL,CAAU2B,GAAV,WAAiB,KAAK1B,GAAtB,4BAA2CS,IAAI,CAACqB,OAAhD,iCAA8ErB,IAAI,CAACe,SAAnF,EAAP;AACD;;;mDAEiCf,I,EAAI;AACpC,iBAAO,KAAKV,IAAL,CAAU2B,GAAV,WAAiB,KAAK1B,GAAtB,8BAA6CS,IAAI,CAACiC,SAAlD,gCAAiFjC,IAAI,CAACe,SAAtF,EAAP;AACD;;;;;;;uBA1JU1B,U,EAAU,uH;AAAA,K;;;aAAVA,U;AAAU,eAAVA,UAAU,K;AAAA,kBAFT;;;;;sEAEDA,U,EAAU;cAHtB,wDAGsB;eAHX;AACV8C,oBAAU,EAAE;AADF,S;AAGW,Q;;;;;;;;;;;;;;;;;;;;;;ACTvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiBY;;AACI;;AACI;;AAAoB;;AACkB;;AAC9B;;AAAQ;;AAAyB;;AACjC;;AAA6E;;AAAO;;AAChG;;AACJ;;;;;;AAJ8C;;AAAA;;AACtB;;AAAA;;AACR;;AAAA;;;;;;AANpB;;AACI;;AAQJ;;;;;;;;AATwC;;AAC/B;;AAAA;;;;;;AAPb;;AACI;;AACI;;AAC+B;;AAC3B;;AAAQ;;AAA8B;;AAAU;;AAA6B;;AACrF;;AACA;;AAUJ;;;;;;AAdkC;;AAAA;;AACK;;AAAA;;AACnB;;AAAA;;AAAwC;;AAAA;;AAEnD;;AAAA;;;;QDJAC,iB;AAqBX,iCAAmBC,UAAnB,EAAkDC,MAAlD,EAAgFC,MAAhF,EAAgG;AAAA;;AAAA;;AAA7E,aAAAF,UAAA,GAAAA,UAAA;AAA+B,aAAAC,MAAA,GAAAA,MAAA;AAA8B,aAAAC,MAAA,GAAAA,MAAA;AAnBzE,aAAAlB,OAAA,GAAe,+DAAOJ,GAAP,CAAW,SAAX,CAAf;AACA,aAAAC,SAAA,GAAiB,+DAAOD,GAAP,CAAW,WAAX,CAAjB;AACA,aAAAF,SAAA,GAAiB,+DAAOE,GAAP,CAAW,WAAX,CAAjB;AAGA,aAAAuB,SAAA,GAAiB,EAAjB;AACA,aAAAC,aAAA,GAAqB,EAArB;AACA,aAAAC,YAAA,GAAoB,EAApB;AACA,aAAAC,YAAA,GAAoB,EAApB;AACA,aAAAC,iBAAA,GAAyB,EAAzB;AACA,aAAAC,WAAA,GAAmB,EAAnB;AACA,aAAAC,UAAA,GAAkB,EAAlB;AACA,aAAAC,UAAA,GAAkB,EAAlB;AACA,aAAAC,eAAA,GAAuB,EAAvB;AACA,aAAAC,eAAA,GAAuB,EAAvB;AACA,aAAAC,eAAA,GAAuB,EAAvB;AACA,aAAAC,UAAA,GAAkB,EAAlB;AACA,aAAAC,UAAA,GAAkB,EAAlB;;AAIA,aAAAC,WAAA,GAAc,YAAM;AACzB,cAAIrD,IAAI,GAAG;AACTqB,mBAAO,EAAE,KAAI,CAACA,OADL;AAETC,wBAAY,EAAE,GAFL;AAGTP,qBAAS,EAAE,KAAI,CAACA;AAHP,WAAX;;AAKA,eAAI,CAACsB,UAAL,CAAgBiB,eAAhB,CAAgCtD,IAAhC,EAAsCuD,SAAtC,CAAgD,UAACC,WAAD,EAAiB;AAC/D,gBAAIA,WAAW,CAACC,MAAZ,KAAuB,GAA3B,EAAgC;AAC9B,mBAAI,CAACC,cAAL,GAAsBF,WAAW,CAACxD,IAAlC;;AACA,mBAAI,CAAC0D,cAAL,CAAoBC,OAApB,CAA4B,UAACC,CAAD,EAAO;AACjC,qBAAI,CAACpB,SAAL,CAAeqB,IAAf,CAAoBD,CAAC,CAAC9C,MAAtB;;AACA,qBAAI,CAAC4B,YAAL,CAAkBkB,CAAC,CAAC9C,MAApB,IAA8B,EAA9B;AACA,qBAAI,CAACgC,UAAL,CAAgBc,CAAC,CAAC9C,MAAlB,IAA4B,EAA5B;AACA,qBAAI,CAACqC,UAAL,CAAgBS,CAAC,CAAC9C,MAAlB,IAA4B,EAA5B;AACA,qBAAI,CAAC8B,iBAAL,CAAuBgB,CAAC,CAAC9C,MAAzB,IAAmC,CAAnC;AACA,qBAAI,CAACkC,eAAL,CAAqBY,CAAC,CAAC9C,MAAvB,IAAiC,CAAjC;;AACA,qBAAI,CAAC4C,cAAL,CAAoBC,OAApB,CAA4B,UAACG,CAAD,EAAO;AACjC,sBAAIF,CAAC,CAAC9C,MAAF,KAAagD,CAAC,CAAChD,MAAnB,EAA2B;AACzB,yBAAI,CAAC4B,YAAL,CAAkBkB,CAAC,CAAC9C,MAApB,EAA4BgD,CAAC,CAAChD,MAA9B,IAAwC,CAAxC;AACA,yBAAI,CAACgC,UAAL,CAAgBc,CAAC,CAAC9C,MAAlB,EAA0BgD,CAAC,CAAChD,MAA5B,IAAsC,CAAtC;AACD;AACF,iBALD;AAMD,eAbD;;AAcA,kBAAId,KAAI,GAAG;AACTqB,uBAAO,EAAE,KAAI,CAACA,OADL;AAETN,yBAAS,EAAE,KAAI,CAACA;AAFP,eAAX;;AAIA,mBAAI,CAACsB,UAAL,CAAgB0B,uBAAhB,CAAwC/D,KAAxC,EAA8CuD,SAA9C,CAAwD,UAACC,WAAD,EAAiB;AACvE,qBAAI,CAAChB,SAAL,CAAemB,OAAf,CAAuB,UAACC,CAAD,EAAO;AAC5B,sBAAII,YAAY,GAAGR,WAAW,CAACxD,IAAZ,CAAiBiE,MAAjB,CAAwB,UAACH,CAAD,EAAO;AAChD,2BAAOA,CAAC,CAACI,eAAF,KAAsBN,CAAtB,IAA2BE,CAAC,CAACjC,aAAF,KAAoB+B,CAAtD;AACD,mBAFkB,CAAnB;AAGAI,8BAAY,CAACL,OAAb,CAAqB,UAACQ,CAAD,EAAO;AAC1B,yBAAI,CAACzB,YAAL,CAAkByB,CAAC,CAACD,eAApB,EAAqCC,CAAC,CAACtC,aAAvC,IAAwD,CAAC,KAAI,CAACa,YAAL,CAAkByB,CAAC,CAACD,eAApB,EAAqCC,CAAC,CAACtC,aAAvC,KAAyD,CAA1D,IAA+DuC,UAAU,CAACD,CAAC,CAACE,eAAH,CAAjI;AACA,yBAAI,CAACzB,iBAAL,CAAuBuB,CAAC,CAACD,eAAzB,IAA4C,CAAC,KAAI,CAACtB,iBAAL,CAAuBuB,CAAC,CAACD,eAAzB,KAA6C,CAA9C,IAAmDE,UAAU,CAACD,CAAC,CAACE,eAAH,CAAzG;AACD,mBAHD;AAIA,sBAAIC,UAAU,GAAGd,WAAW,CAACxD,IAAZ,CAAiBiE,MAAjB,CAAwB,UAACH,CAAD,EAAO;AAC9C,2BAAOA,CAAC,CAACjC,aAAF,KAAoB+B,CAApB,IAAyBE,CAAC,CAACI,eAAF,KAAsBN,CAAtD;AACD,mBAFgB,CAAjB;AAGAU,4BAAU,CAACX,OAAX,CAAmB,UAACQ,CAAD,EAAO;AACxB,yBAAI,CAACrB,UAAL,CAAgBqB,CAAC,CAACtC,aAAlB,EAAiCsC,CAAC,CAACD,eAAnC,IAAsD,CAAC,KAAI,CAACpB,UAAL,CAAgBqB,CAAC,CAACtC,aAAlB,EAAiCsC,CAAC,CAACD,eAAnC,KAAuD,CAAxD,IAA6DE,UAAU,CAACD,CAAC,CAACrC,aAAH,CAA7H;AACA,yBAAI,CAACkB,eAAL,CAAqBmB,CAAC,CAACtC,aAAvB,IAAwC,CAAC,KAAI,CAACmB,eAAL,CAAqBmB,CAAC,CAACtC,aAAvB,KAAyC,CAA1C,IAA+CuC,UAAU,CAACD,CAAC,CAACrC,aAAH,CAAjG;AACD,mBAHD;AAIA,uBAAI,CAACmB,eAAL,CAAqBW,CAArB,IAA0B,KAAI,CAACZ,eAAL,CAAqBY,CAArB,IAA0B,KAAI,CAAChB,iBAAL,CAAuBgB,CAAvB,CAApD;AACAU,4BAAU,CAACX,OAAX,CAAmB,UAACQ,CAAD,EAAO;AACxB,yBAAI,CAAChB,UAAL,CAAgBS,CAAhB,EAAmBO,CAAC,CAACD,eAArB,IAAwC,KAAI,CAACpB,UAAL,CAAgBc,CAAhB,EAAmBO,CAAC,CAACD,eAArB,IAAwC,KAAI,CAACxB,YAAL,CAAkBkB,CAAlB,EAAqBO,CAAC,CAACD,eAAvB,CAAhF;AACD,mBAFD;AAGAF,8BAAY,CAACL,OAAb,CAAqB,UAACQ,CAAD,EAAO;AAC1B,yBAAI,CAAChB,UAAL,CAAgBS,CAAhB,EAAmBO,CAAC,CAACtC,aAArB,IAAsC,KAAI,CAACiB,UAAL,CAAgBc,CAAhB,EAAmBO,CAAC,CAACtC,aAArB,IAAsC,KAAI,CAACa,YAAL,CAAkBkB,CAAlB,EAAqBO,CAAC,CAACtC,aAAvB,CAA5E;AACD,mBAFD;AAGD,iBAtBD;;AAwBA,qBAAK,IAAI0C,CAAT,IAAc,KAAI,CAACpB,UAAnB,EAA+B;AAAA,6CACpBqB,CADoB;AAE3B,wBAAI9C,MAAM,GAAG,KAAI,CAAC+C,gBAAL,CAAsB,KAAI,CAACtB,UAAL,CAAgBoB,CAAhB,EAAmBC,CAAnB,CAAtB,CAAb;;AACA,yBAAI,CAACpB,UAAL,CAAgBS,IAAhB,CAAqB;AACnBa,mCAAa,EAAEH,CADI;AAEnBI,qCAAe,EAAE,KAAI,CAACC,aAAL,CAAmBL,CAAnB,CAFE;AAGnBM,iCAAW,EAAG,YAAM;AAClB,4BAAInD,MAAM,GAAG,CAAb,EAAgB,OAAO,WAAP,CAAhB,KACK,IAAIA,MAAM,GAAG,CAAb,EAAgB,OAAO,MAAP,CAAhB,KACA,OAAO,EAAP;AACN,uBAJY,EAHM;AAQnBoD,mCAAa,EAAG,YAAM;AACpB,4BAAIpD,MAAM,KAAK,CAAf,EAAkB,OAAOqD,IAAI,CAACC,GAAL,CAAStD,MAAT,CAAP,CAAlB,KACK,OAAO,EAAP;AACN,uBAHc,EARI;AAYnBuD,kCAAY,EAAG,YAAM;AACnB,4BAAIvD,MAAM,GAAG,CAAb,EAAgB,OAAO,MAAP,CAAhB,KACK,IAAIA,MAAM,GAAG,CAAb,EAAgB,OAAO,IAAP,CAAhB,KACA,OAAO,EAAP;AACN,uBAJa,EAZK;AAiBnBwD,oCAAc,EAAEV,CAjBG;AAkBnBW,sCAAgB,EAAE,KAAI,CAACP,aAAL,CAAmBJ,CAAnB,CAlBC;AAmBnBY,iCAAW,EAAG,YAAM;AAClB,4BAAI1D,MAAM,KAAK,CAAf,EAAkB,OAAO,UAAP,CAAlB,KACK,OAAO,eAAP;AACN,uBAHY;AAnBM,qBAArB;AAH2B;;AAC7B,uBAAK,IAAI8C,CAAT,IAAc,KAAI,CAACrB,UAAL,CAAgBoB,CAAhB,CAAd,EAAkC;AAAA,0BAAzBC,CAAyB;AA0BjC;AACF;;AArDsE,6CAsD9DD,EAtD8D;AAuDrE,sBAAI7C,MAAM,GAAG,KAAI,CAAC+C,gBAAL,CAAsB,KAAI,CAACxB,eAAL,CAAqBsB,EAArB,CAAtB,CAAb;;AACA,uBAAI,CAACrB,eAAL,CAAqBW,IAArB,CAA0B;AACxBwB,4BAAQ,EAAEd,EADc;AAExBe,8BAAU,EAAE,KAAI,CAACV,aAAL,CAAmBL,EAAnB,CAFY;AAGxBM,+BAAW,EAAG,YAAM;AAClB,0BAAInD,MAAM,GAAG,CAAb,EAAgB,OAAO,WAAP,CAAhB,KACK,IAAIA,MAAM,GAAG,CAAb,EAAgB,OAAO,MAAP,CAAhB,KACA,OAAO,EAAP;AACN,qBAJY,EAHW;AAQxBoD,iCAAa,EAAG,YAAM;AACpB,0BAAIpD,MAAM,KAAK,CAAf,EAAkB,OAAOqD,IAAI,CAACC,GAAL,CAAStD,MAAT,CAAP,CAAlB,KACK,OAAO,EAAP;AACN,qBAHc,EARS;AAYxBuD,gCAAY,EAAG,YAAM;AACnB,0BAAIvD,MAAM,KAAK,CAAf,EAAkB,OAAO,UAAP,CAAlB,KACK,OAAO,eAAP;AACN,qBAHa;AAZU,mBAA1B;AAxDqE;;AAsDvE,qBAAK,IAAI6C,EAAT,IAAc,KAAI,CAACtB,eAAnB,EAAoC;AAAA,yBAA3BsB,EAA2B;AAmBnC;AACF,eA1ED;AA2ED;AACF,WAjGD;AAkGD,SAxGM;;AA0GA,aAAAgB,YAAA,GAAe,UAACF,QAAD,EAAc;AAClC,iBAAO,KAAI,CAACjC,UAAL,CAAgBa,MAAhB,CAAuB,UAAAL,CAAC;AAAA,mBAAIA,CAAC,CAACc,aAAF,KAAoBW,QAAxB;AAAA,WAAxB,CAAP;AACD,SAFM;;AAIA,aAAAT,aAAA,GAAgB,UAACS,QAAD,EAAc;AACnC,cAAIG,aAAa,GAAG,KAAI,CAAC9B,cAAL,CAAoB+B,IAApB,CAAyB,UAAA7B,CAAC;AAAA,mBAAIA,CAAC,CAAC9C,MAAF,KAAauE,QAAjB;AAAA,WAA1B,CAApB;;AACA,2BAAUG,aAAa,CAACnF,SAAxB,cAAqCmF,aAAa,CAAClF,QAAnD;AACD,SAHM;;AAKA,aAAAmE,gBAAA,GAAmB,UAACiB,GAAD,EAAS;AACjC,iBAAOX,IAAI,CAACY,KAAL,CAAW,CAACvB,UAAU,CAACsB,GAAD,CAAV,GAAkBE,MAAM,CAACC,OAA1B,IAAqC,GAAhD,IAAuD,GAA9D;AACD,SAFM;AArH4F;;;;mCAyH3F;AACN,eAAKxC,WAAL;AACD;;;;;;;uBAhJUjB,iB,EAAiB,wH,EAAA,yH,EAAA,uH;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,a;AAAA,ogB;AAAA;AAAA;ACZ9B;;AACA;;AACA;;AACA;;AACI;;AAAiB;;AAAa;;AAClC;;AACA;;AACA;;AACA;;AACA;;AACI;;AADJ;;;;AALqB;;AAAA;;AAMZ;;AAAA;;;;;;;;;sEDEIA,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACT5D,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAyCaoH,e;;;;;YAAAA;;;;yBAAAA,e;AAAe,O;AAAA,gBApBjB,CACP,4DADO,EAEP,kEAFO,EAGP,yEAHO,EAIP,0DAJO,EAKP,uEALO,EAMP,kEANO,EAOP,wEAPO,EAQP,wDAAalH,OAAb,EARO,EASP,6DAAamH,QAAb,CAAsB,CACpB;AAAElH,YAAI,EAAE,QAAR;AAAkBC,iBAAS,EAAE;AAA7B,OADoB,EAEpB;AAAED,YAAI,EAAE,aAAR;AAAuBC,iBAAS,EAAE;AAAlC,OAFoB,EAGpB;AAAED,YAAI,EAAE,YAAR;AAAsBC,iBAAS,EAAE;AAAjC,OAHoB,EAIpB;AAAED,YAAI,EAAE,mBAAR;AAA6BC,iBAAS,EAAE;AAAxC,OAJoB,EAKpB;AAAED,YAAI,EAAE,kBAAR;AAA4BC,iBAAS,EAAE;AAAvC,OALoB,EAMpB;AAAED,YAAI,EAAE,eAAR;AAAyBC,iBAAS,EAAE;AAApC,OANoB,EAOpB;AAAED,YAAI,EAAE,iBAAR;AAA2BC,iBAAS,EAAE;AAAtC,OAPoB,CAAtB,CATO,CAoBiB;;;;0HAAfgH,e,EAAe;AAAA,uBArBX,wEAqBW,EArBM,6FAqBN,EArB6B,iFAqB7B,EArBgD,oFAqBhD,EArBoE,mGAqBpE,EArB6F,0FAqB7F,EArBmH,+EAqBnH;AArBoI,kBAE5J,4DAF4J,EAG5J,kEAH4J,EAI5J,yEAJ4J,EAK5J,0DAL4J,EAM5J,uEAN4J,EAO5J,kEAP4J,EAQ5J,wEAR4J,EAQrI,uDARqI,EAQrI,4DARqI;AAqBpI,O;AAbD,K;;;;;sEAadA,e,EAAe;cAtB3B,sDAsB2B;eAtBlB;AACR7G,sBAAY,EAAE,CAAC,wEAAD,EAAkB,6FAAlB,EAAyC,iFAAzC,EAA4D,oFAA5D,EAAgF,mGAAhF,EAAyG,0FAAzG,EAA+H,+EAA/H,CADN;AAERC,iBAAO,EAAE,CACP,4DADO,EAEP,kEAFO,EAGP,yEAHO,EAIP,0DAJO,EAKP,uEALO,EAMP,kEANO,EAOP,wEAPO,EAQP,wDAAaN,OAAb,EARO,EASP,6DAAamH,QAAb,CAAsB,CACpB;AAAElH,gBAAI,EAAE,QAAR;AAAkBC,qBAAS,EAAE;AAA7B,WADoB,EAEpB;AAAED,gBAAI,EAAE,aAAR;AAAuBC,qBAAS,EAAE;AAAlC,WAFoB,EAGpB;AAAED,gBAAI,EAAE,YAAR;AAAsBC,qBAAS,EAAE;AAAjC,WAHoB,EAIpB;AAAED,gBAAI,EAAE,mBAAR;AAA6BC,qBAAS,EAAE;AAAxC,WAJoB,EAKpB;AAAED,gBAAI,EAAE,kBAAR;AAA4BC,qBAAS,EAAE;AAAvC,WALoB,EAMpB;AAAED,gBAAI,EAAE,eAAR;AAAyBC,qBAAS,EAAE;AAApC,WANoB,EAOpB;AAAED,gBAAI,EAAE,iBAAR;AAA2BC,qBAAS,EAAE;AAAtC,WAPoB,CAAtB,CATO;AAFD,S;AAsBkB,Q;;;;;;;;;;;;;;;;;;ACzC5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACuBY;;AAAiE;;AACjE;;;;;;AAD4C;;AAAqB;;AAAA;;;;;;AAQjE;;AAAoE;;AACpE;;;;;;AAD4C;;AAAwB;;AAAA;;;;;;;;AAUpE;;AACI;;AAAoB;;AACkB;;AAAmB;;AAAO;;AACxD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAsC;;AAC9C;;AACJ;;;;;;AAH0C;;AAAA;;;;;;AAsB9C;;;;;;;;AADJ;;AACI;;AACA;;AAAuD;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAW;;AAChG;;;;;;AAFU;;AAAA;;;;;;AAIN;;;;;;;;AADJ;;AACI;;AACA;;AAAuD;AAAA;;AAAA;;AAAA;AAAA;;AAA0B;;AAAc;;AACnG;;;;;;AAFU;;AAAA;;;;;;AAkBF;;AACI;;AACI;;AAEA;;AAAiE;;AAC1C;;AAC3B;;AACJ;;;;;;AAL2E;;AAAA;;AAC/D;;AACgC;;AAAA;;AAA6B;;AAAA;;;;;;;;AAbjF;;AACI;;AAAwB;;AAAO;;AAC/B;;AAAsD;AAAA;AAAA;AAAA;;AAClD;;AAAyB;;AAAO;;AACpC;;AACJ;;AAEA;;AACI;;AACI;;AAQJ;;AAGJ;;AAEA;;AAEI;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpD;;AACJ;;AAEJ;;;;;;AAnBY;;AAAA;;;;QD1EHkH,uB;AA6BX,uCAAmB3D,UAAnB,EAAkDC,MAAlD,EAAgFC,MAAhF,EAAuG0D,KAAvG,EAA+HC,aAA/H,EAA6J;AAAA;;AAAA;;AAA1I,aAAA7D,UAAA,GAAAA,UAAA;AAA+B,aAAAC,MAAA,GAAAA,MAAA;AAA8B,aAAAC,MAAA,GAAAA,MAAA;AAAuB,aAAA0D,KAAA,GAAAA,KAAA;AAAwB,aAAAC,aAAA,GAAAA,aAAA;AAzBxH,aAAAnF,SAAA,GAAiB,+DAAOE,GAAP,CAAW,WAAX,CAAjB;AACA,aAAAI,OAAA,GAAe,+DAAOJ,GAAP,CAAW,SAAX,CAAf;AACA,aAAAC,SAAA,GAAiB,+DAAOD,GAAP,CAAW,WAAX,CAAjB;AACA,aAAAc,aAAA,GAAqB,EAArB;AACA,aAAAN,WAAA,GAAmB,EAAnB;AACA,aAAAN,QAAA,GAAgB,mBAAhB;AACA,aAAAU,aAAA,GAAqB,iBAArB;AACA,aAAAsE,UAAA,GAAkB,CAAC,gBAAD,EAAmB,oBAAnB,EAAyC,gBAAzC,EAA2D,eAA3D,EAA4E,OAA5E,CAAlB;AACA,aAAAzE,MAAA,GAAc,EAAd;AACA,aAAAC,eAAA,GAAuB,EAAvB;AACA,aAAAC,KAAA,GAAa,EAAb;AAGA,aAAAwE,SAAA,GAAiB,KAAjB;AACA,aAAAC,SAAA,GAAiB,KAAjB;AAEA,aAAAC,eAAA,GAAuB,EAAvB;AACA,aAAAC,kBAAA,GAA0B,EAA1B;AACA,aAAAtE,SAAA,GAAiB,+DAAOhB,GAAP,CAAW,WAAX,CAAjB;AAGA,aAAAuF,WAAA,GAAmB,EAAnB;AACA,aAAAC,iBAAA,GAAyB,EAAzB;;AAKA,aAAAC,aAAA,GAAgB,YAAM;AAC3B,cAAI,MAAI,CAACC,cAAL,EAAJ,EAA2B;AACzB,gBAAI3E,cAAc,aAAM,MAAI,CAAC4C,aAAL,CAAmB,MAAI,CAACgC,QAAL,CAAc9F,MAAjC,CAAN,0BAAlB;AACA,kBAAI,CAACuD,eAAL,GAAuB,MAAI,CAAC3C,MAAL,GAAc,MAAI,CAAC4E,eAAL,CAAqBO,MAA1D;;AAFyB,uDAGT,MAAI,CAACP,eAHI;AAAA;;AAAA;AAGzB;AAAA,oBAASQ,GAAT;;AAAsC,sBAAI,CAAC/E,aAAL,CAAmB8B,IAAnB,CACpC;AACEK,iCAAe,EAAE4C,GAAG,CAAChG,MADvB;AAEEuD,iCAAe,EAAE,MAAI,CAACA;AAFxB,iBADoC;AAAtC;AAHyB;AAAA;AAAA;AAAA;AAAA;;AASzB,gBAAIrE,IAAI,GAAG;AACTyB,yBAAW,EAAE,MAAI,CAACA,WADT;AAETN,sBAAQ,EAAE,MAAI,CAACA,QAFN;AAGTO,oBAAM,EAAE,MAAI,CAACA,MAHJ;AAITC,6BAAe,EAAE,MAAI,CAACA,eAJb;AAKTC,mBAAK,EAAE,MAAI,CAACA,KALH;AAMTP,qBAAO,EAAE,MAAI,CAACA,OANL;AAOTQ,2BAAa,EAAE,MAAI,CAACA,aAPX;AAQTC,2BAAa,EAAE,MAAI,CAACuC,eARX;AASTtC,2BAAa,EAAE,MAAI,CAACA,aATX;AAUTC,4BAAc,EAAEA,cAVP;AAWTjB,uBAAS,EAAE,MAAI,CAACA;AAXP,aAAX;AAaA,kBAAI,CAACqF,SAAL,GAAiB,IAAjB;;AACA,kBAAI,CAAC/D,UAAL,CAAgB0E,sBAAhB,CAAuC/G,IAAvC,EAA6CuD,SAA7C,CAAuD,UAACC,WAAD,EAAiB;AACtE,oBAAI,CAAC4C,SAAL,GAAiB,KAAjB;;AACA,kBAAI5C,WAAW,CAACC,MAAZ,KAAuB,GAA3B,EAAgC;AAC9B,sBAAI,CAACnB,MAAL,CAAY0E,OAAZ,CAAoB,4BAApB,EAD8B,CAE9B;;;AACAC,sBAAM,CAACC,OAAP,CAAeC,IAAf;;AACA,sBAAI,CAACZ,kBAAL,CAAwB5C,OAAxB,CAAgC,UAACC,CAAD,EAAO;AACrC,wBAAI,CAACwD,MAAL,CAAY,oCAAZ,EAAkDxD,CAAlD,EAAqD,MAAI,CAACnC,WAA1D;AACD,iBAFD;AAGD;;AACD,kBAAI+B,WAAW,CAAC6D,KAAhB,EAAuB;AACrB,sBAAI,CAAC/E,MAAL,CAAY+E,KAAZ,CAAkB,2BAAlB;AACD;AACF,aAbD;AAcD;AACF,SAvCM;;AA6FA,aAAAC,aAAA,GAAgB,YAAM;AAC3B,gBAAI,CAACrB,KAAL,CAAWsB,IAAX,CAAgB,MAAI,CAACC,WAArB,EAAkC;AAAEC,gBAAI,EAAE;AAAR,WAAlC;AACD,SAFM;;AAuBA,aAAA7C,aAAA,GAAgB,UAACS,QAAD,EAAc;AACnC,cAAIG,aAAa,GAAG,MAAI,CAAC9B,cAAL,CAAoB+B,IAApB,CAAyB,UAAA7B,CAAC;AAAA,mBAAIA,CAAC,CAAC9C,MAAF,KAAauE,QAAjB;AAAA,WAA1B,CAApB;;AACA,2BAAUG,aAAa,CAACnF,SAAxB,cAAqCmF,aAAa,CAAClF,QAAnD;AACD,SAHM;;AAKA,aAAAoH,YAAA,GAAe,UAACrC,QAAD,EAAc;AAClC,gBAAI,CAACsC,MAAL,CAAY,MAAI,CAACpB,kBAAjB,EAAqClB,QAArC;;AACA,gBAAI,CAACiB,eAAL,GAAuB,MAAI,CAACsB,YAAL,CAAkB,MAAI,CAACtB,eAAvB,EAAwC,QAAxC,EAAkDjB,QAAlD,CAAvB;AACD,SAHM;;AAKA,aAAAsC,MAAA,GAAS,UAACE,GAAD,EAAMC,KAAN,EAAgB;AAC9B,cAAIC,KAAK,GAAGF,GAAG,CAACG,OAAJ,CAAYF,KAAZ,CAAZ;;AACA,cAAIC,KAAK,IAAI,CAAb,EAAgB;AACdF,eAAG,CAACI,MAAJ,CAAWF,KAAX,EAAkB,CAAlB;AACD;AACF,SALM;;AAQA,aAAAH,YAAA,GAAe,UAACC,GAAD,EAAMK,IAAN,EAAYJ,KAAZ,EAAsB;AAC1C,cAAIvD,CAAC,GAAGsD,GAAG,CAAChB,MAAZ;;AACA,iBAAOtC,CAAC,EAAR,EAAY;AACV,gBAAIsD,GAAG,CAACtD,CAAD,CAAH,CAAO2D,IAAP,MAAiBJ,KAArB,EACED,GAAG,CAACI,MAAJ,CAAW1D,CAAX,EAAc,CAAd;AACH;;AACD,iBAAOsD,GAAP;AACD,SAPM;;AASA,aAAAM,aAAA,GAAgB,YAAM;AAC3B,cAAI,MAAI,CAACxB,cAAL,EAAJ,EAA2B;AACzB,kBAAI,CAACtC,eAAL,GAAuB,MAAI,CAAC3C,MAAL,GAAc,MAAI,CAAC4E,eAAL,CAAqBO,MAA1D;;AADyB,wDAET,MAAI,CAACP,eAFI;AAAA;;AAAA;AAEzB;AAAA,oBAASQ,GAAT;;AAAsC,sBAAI,CAAC/E,aAAL,CAAmB8B,IAAnB,CACpC;AACEK,iCAAe,EAAE4C,GAAG,CAAChG,MADvB;AAEEuD,iCAAe,EAAE,MAAI,CAACA;AAFxB,iBADoC;AAAtC;AAFyB;AAAA;AAAA;AAAA;AAAA;;AAOzB,kBAAI,CAAC+D,YAAL;;AACA,gBAAIpI,IAAI,GAAG;AACTiC,uBAAS,EAAE,MAAI,CAACA,SADP;AAETR,yBAAW,EAAE,MAAI,CAACA,WAFT;AAGTN,sBAAQ,EAAE,MAAI,CAACA,QAHN;AAITO,oBAAM,EAAE,MAAI,CAACA,MAJJ;AAKTC,6BAAe,EAAE,MAAI,CAACA,eALb;AAMTC,mBAAK,EAAE,MAAI,CAACA,KANH;AAOTP,qBAAO,EAAE,MAAI,CAACA,OAPL;AAQTQ,2BAAa,EAAE,MAAI,CAACA,aARX;AASTC,2BAAa,EAAE,MAAI,CAACuC,eATX;AAUTtC,2BAAa,EAAE,MAAI,CAACA,aAVX;AAWTG,gCAAkB,EAAE,MAAI,CAACsE,WAXhB;AAYTzF,uBAAS,EAAE,MAAI,CAACA;AAZP,aAAX;AAcA,kBAAI,CAACsF,SAAL,GAAiB,IAAjB;;AACA,kBAAI,CAAChE,UAAL,CAAgBgG,sBAAhB,CAAuCrI,IAAvC,EAA6CuD,SAA7C,CAAuD,UAACC,WAAD,EAAiB;AACtE,oBAAI,CAAC6C,SAAL,GAAiB,KAAjB;;AACA,kBAAI7C,WAAW,CAACC,MAAZ,KAAuB,GAA3B,EAAgC;AAC9B,sBAAI,CAACnB,MAAL,CAAY0E,OAAZ,CAAoB,8BAApB,EAD8B,CAE9B;;;AACAC,sBAAM,CAACC,OAAP,CAAeC,IAAf;;AACA,sBAAI,CAACZ,kBAAL,CAAwB5C,OAAxB,CAAgC,UAACC,CAAD,EAAO;AACrC,wBAAI,CAACwD,MAAL,CAAY,0BAAZ,EAAwCxD,CAAxC,EAA2C,MAAI,CAACnC,WAAhD;AACD,iBAFD;AAGD;;AACD,kBAAI+B,WAAW,CAAC6D,KAAhB,EAAuB;AACrB,sBAAI,CAAC/E,MAAL,CAAY+E,KAAZ,CAAkB,8BAAlB;AACD;AACF,aAbD;AAcD;AACF,SAvCM;;AAyCA,aAAAe,YAAA,GAAe,YAAM;AAC1B,cAAI,MAAI,CAACE,qBAAL,KAA+B,MAAI,CAACzG,aAAxC,EAAuD,MAAI,CAAC2E,WAAL,CAAiB3C,IAAjB,WAAyB,MAAI,CAACe,aAAL,CAAmB,MAAI,CAACgC,QAAL,CAAc9F,MAAjC,CAAzB,qCAA4F,MAAI,CAAC8D,aAAL,CAAmB,MAAI,CAAC0D,qBAAxB,CAA5F,iBAAiJ,MAAI,CAAC1D,aAAL,CAAmB,MAAI,CAAC/C,aAAxB,CAAjJ;AACvD,cAAI,MAAI,CAAC0G,OAAL,CAAa7G,MAAb,KAAwB,MAAI,CAACA,MAAjC,EAAyC,MAAI,CAAC8E,WAAL,CAAiB3C,IAAjB,WAAyB,MAAI,CAACe,aAAL,CAAmB,MAAI,CAACgC,QAAL,CAAc9F,MAAjC,CAAzB,sCAA6F,MAAI,CAACyH,OAAL,CAAa7G,MAA1G,iBAAuH,MAAI,CAACA,MAA5H;AACzC,cAAI,MAAI,CAAC6G,OAAL,CAAa5G,eAAb,KAAiC,MAAI,CAACA,eAA1C,EAA2D,MAAI,CAAC6E,WAAL,CAAiB3C,IAAjB,WAAyB,MAAI,CAACe,aAAL,CAAmB,MAAI,CAACgC,QAAL,CAAc9F,MAAjC,CAAzB,gDAAuG,MAAI,CAACyH,OAAL,CAAa5G,eAApH,iBAA0I,MAAI,CAACA,eAA/I;AAC3D,cAAI,MAAI,CAAC4G,OAAL,CAAapH,QAAb,KAA0B,MAAI,CAACA,QAAnC,EAA6C,MAAI,CAACqF,WAAL,CAAiB3C,IAAjB,WAAyB,MAAI,CAACe,aAAL,CAAmB,MAAI,CAACgC,QAAL,CAAc9F,MAAjC,CAAzB;AAC7C,cAAI,MAAI,CAACyH,OAAL,CAAa3G,KAAb,KAAuB,MAAI,CAACA,KAAhC,EAAuC,MAAI,CAAC4E,WAAL,CAAiB3C,IAAjB,WAAyB,MAAI,CAACe,aAAL,CAAmB,MAAI,CAACgC,QAAL,CAAc9F,MAAjC,CAAzB;AACvC,cAAI,MAAI,CAACyH,OAAL,CAAa9G,WAAb,KAA6B,MAAI,CAACA,WAAtC,EAAmD,MAAI,CAAC+E,WAAL,CAAiB3C,IAAjB,WAAyB,MAAI,CAACe,aAAL,CAAmB,MAAI,CAACgC,QAAL,CAAc9F,MAAjC,CAAzB;;AACnD,gBAAI,CAACyF,kBAAL,CAAwB5C,OAAxB,CAAgC,UAACC,CAAD,EAAO;AACrC,gBAAI,CAAC,MAAI,CAAC6C,iBAAL,CAAuB+B,QAAvB,CAAgC5E,CAAhC,CAAL,EAAyC,MAAI,CAAC4C,WAAL,CAAiB3C,IAAjB,WAAyB,MAAI,CAACe,aAAL,CAAmBhB,CAAnB,CAAzB;AAC1C,WAFD;;AAGA,gBAAI,CAAC6C,iBAAL,CAAuB9C,OAAvB,CAA+B,UAACC,CAAD,EAAO;AACpC,gBAAI,CAAC,MAAI,CAAC2C,kBAAL,CAAwBiC,QAAxB,CAAiC5E,CAAjC,CAAL,EAA0C,MAAI,CAAC4C,WAAL,CAAiB3C,IAAjB,WAAyB,MAAI,CAACe,aAAL,CAAmBhB,CAAnB,CAAzB;AAC3C,WAFD;AAGD,SAbM;;AAeA,aAAAwD,MAAA,GAAS,UAACqB,OAAD,EAAU3H,MAAV,EAAkBvC,KAAlB,EAA4B;AAC1C,gBAAI,CAAC2H,aAAL,CAAmBwC,IAAnB,CAAwB,gBAAxB,EAA0C;AAAED,mBAAO,EAAEA,OAAX;AAAoB3H,kBAAM,EAAEA,MAA5B;AAAoCvC,iBAAK,EAAEA;AAA3C,WAA1C;AACD,SAFM;;AAIA,aAAAoI,cAAA,GAAiB,YAAM;AAC5B,cAAI,CAAC,MAAI,CAAClF,WAAV,EAAuB,MAAI,CAACa,MAAL,CAAYqG,OAAZ,CAAoB,iCAApB,EAAvB,KAEK,IAAI,MAAI,CAACxH,QAAL,KAAkB,mBAAtB,EAA2C,MAAI,CAACmB,MAAL,CAAYqG,OAAZ,CAAoB,4BAApB,EAA3C,KAEA,IAAI,MAAI,CAAC9G,aAAL,KAAuB,iBAA3B,EAA8C,MAAI,CAACS,MAAL,CAAYqG,OAAZ,CAAoB,yBAApB,EAA9C,KAEA,IAAI,MAAI,CAACpC,kBAAL,CAAwBM,MAAxB,KAAmC,CAAvC,EAA0C,MAAI,CAACvE,MAAL,CAAYqG,OAAZ,CAAoB,0CAApB,EAA1C,KAEA,IAAI,CAAC,MAAI,CAACjH,MAAV,EAAkB,MAAI,CAACY,MAAL,CAAYqG,OAAZ,CAAoB,2BAApB,EAAlB,KAEA,IAAI,CAAC,MAAI,CAAChH,eAAV,EAA2B,MAAI,CAACW,MAAL,CAAYqG,OAAZ,CAAoB,qCAApB,EAA3B,KAEA,OAAO,IAAP;AACN,SAdM;AA7MyJ;;;;6CA4CpI;AAAA;;AAC1B,eAAK/B,QAAL,GAAgB,KAAKvE,UAAL,CAAgB3C,2BAAhB,EAAhB;AACA,cAAIM,IAAI,GAAG;AACTqB,mBAAO,EAAE,KAAKA,OADL;AAETC,wBAAY,EAAE,GAFL;AAGTP,qBAAS,EAAE,KAAKA;AAHP,WAAX;AAKA,eAAKsB,UAAL,CAAgBiB,eAAhB,CAAgCtD,IAAhC,EAAsCuD,SAAtC,CAAgD,UAACC,WAAD,EAAiB;AAC/D,gBAAIA,WAAW,CAACC,MAAZ,KAAuB,GAA3B,EAAgC;AAC9B,oBAAI,CAACC,cAAL,GAAsBF,WAAW,CAACxD,IAAlC;;AACA,kBAAI,MAAI,CAACiC,SAAT,EAAoB;AAClB,oBAAI2G,WAAW,GAAG;AAChB3G,2BAAS,EAAE,MAAI,CAACA,SADA;AAEhBlB,2BAAS,EAAE,MAAI,CAACA;AAFA,iBAAlB;;AAIA,sBAAI,CAACsB,UAAL,CAAgBwG,iBAAhB,CAAkCD,WAAlC,EAA+CrF,SAA/C,CAAyD,UAACC,WAAD,EAAiB;AACxE,sBAAIA,WAAW,CAACC,MAAZ,KAAuB,GAA3B,EAAgC;AAC9B,0BAAI,CAAC8E,OAAL,GAAe/E,WAAW,CAACxD,IAA3B;AACA,0BAAI,CAACyB,WAAL,GAAmB+B,WAAW,CAACxD,IAAZ,CAAiByB,WAApC;AACA,0BAAI,CAACN,QAAL,GAAgBqC,WAAW,CAACxD,IAAZ,CAAiBmB,QAAjC;AACA,0BAAI,CAACO,MAAL,GAAc8B,WAAW,CAACxD,IAAZ,CAAiB0B,MAA/B;AACA,0BAAI,CAACC,eAAL,GAAuB6B,WAAW,CAACxD,IAAZ,CAAiB2B,eAAxC;AACA,0BAAI,CAACC,KAAL,GAAa4B,WAAW,CAACxD,IAAZ,CAAiB4B,KAA9B;AACD;AACF,iBATD;;AAUA,oBAAIkH,UAAU,GAAG;AACf7G,2BAAS,EAAE,MAAI,CAACA,SADD;AAEflB,2BAAS,EAAE,MAAI,CAACA;AAFD,iBAAjB;;AAIA,sBAAI,CAACsB,UAAL,CAAgB0G,yBAAhB,CAA0CD,UAA1C,EAAsDvF,SAAtD,CAAgE,UAACC,WAAD,EAAiB;AAC/E,sBAAIA,WAAW,CAACC,MAAZ,KAAuB,GAA3B,EAAgC;AAC9B,0BAAI,CAAC6E,qBAAL,GAA6B9E,WAAW,CAACxD,IAAZ,CAAiB,CAAjB,EAAoB6B,aAAjD;AACA,0BAAI,CAACA,aAAL,GAAqB2B,WAAW,CAACxD,IAAZ,CAAiB,CAAjB,EAAoB6B,aAAzC;AACA2B,+BAAW,CAACxD,IAAZ,CAAiB2D,OAAjB,CAAyB,UAACC,CAAD,EAAO;AAC9B,0BAAIyB,QAAQ,GAAGzB,CAAC,CAACM,eAAjB;;AACA,4BAAI,CAACuC,iBAAL,CAAuB5C,IAAvB,CAA4BwB,QAA5B;;AACA,4BAAI,CAACkB,kBAAL,CAAwB1C,IAAxB,CAA6BwB,QAA7B;;AACA,4BAAI,CAACiB,eAAL,CAAqBzC,IAArB,CACE;AACE/C,8BAAM,EAAEuE,QADV;AAEE2D,gCAAQ,EAAE,MAAI,CAACpE,aAAL,CAAmBS,QAAnB;AAFZ,uBADF;AAMD,qBAVD;AAWD;AACF,iBAhBD;AAiBD;AACF;AACF,WAzCD;AA0CD;;;uCAMqB4D,K,EAAO;AAAA;;AAC3B,cAAIC,WAAW,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,yBAA1B,CAAlB;;AACA,cAAIF,WAAW,CAACrC,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BqC,uBAAW,CAACvF,OAAZ,CAAoB,UAACC,CAAD,EAAO;AACzB,kBAAIyB,QAAQ,GAAGzB,CAAC,CAAC,OAAD,CAAhB;;AACA,kBAAI,CAAC,MAAI,CAAC2C,kBAAL,CAAwBiC,QAAxB,CAAiCnD,QAAjC,CAAL,EAAiD;AAC/C,sBAAI,CAACkB,kBAAL,CAAwB1C,IAAxB,CAA6BwB,QAA7B;;AACA,sBAAI,CAACiB,eAAL,CAAqBzC,IAArB,CACE;AACE/C,wBAAM,EAAEuE,QADV;AAEE2D,0BAAQ,EAAEpF,CAAC,CAACyF,WAAF,CAAcC;AAF1B,iBADF;AAMD;AACF,aAXD;AAYD;;AACDL,eAAK;AACN;;;mCAyGO;AACN,eAAKM,kBAAL;AACD;;;;;;;uBA5PUvD,uB,EAAuB,wH,EAAA,yH,EAAA,uH,EAAA,oI,EAAA,8H;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA;AAAA;;;;;;;;;;;;;;;ACbpC;;AACA;;AACA;;AACA;;AACI;;AAAiB;;AAAa;;AAClC;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEI;;AAA2C;;AAAO;;AAClD;;AACA;;AACI;;AAAiC;;AAAY;;AAC7C;;AAAwC;AAAA;AAAA;;AAAxC;;AACJ;;AACA;;AACI;;AAA8B;;AAAQ;;AACtC;;AAAmE;AAAA;AAAA;;AAC/D;;AAAiB;;AAAiB;;AAClC;;AAEJ;;AACJ;;AACA;;AACI;;AAAiC;;AAAM;;AACvC;;AAA2E;AAAA;AAAA;;AACvE;;AAAiB;;AAAe;;AAChC;;AAEJ;;AACJ;;AACA;;AACI;;AAA8B;;AAAgB;;AAC9C;;AAA6C;AAAA,mBAAS,IAAAsB,aAAA,EAAT;AAAwB,WAAxB;;AAA0B;;AAAc;;AACzF;;AACA;;AACI;;AACI;;AAMJ;;AACJ;;AACA;;AACI;;AAA4B;;AAAM;;AAClC;;AAAwC;AAAA;AAAA;;AAAxC;;AACJ;;AACA;;AACI;;AAAqC;;AAAgB;;AACrD;;AAAO;AAAA;AAAA;;AAAP;;AAEA;;AACJ;;AACA;;AACI;;AAA2B;;AAAK;;AAChC;;AAA+B;AAAA;AAAA;;AAA6D;;AAChG;;AACA;;AACA;;AAIA;;AAIA;;AACJ;;AACA;;AAEA;;;;;;AAxEqB;;AAAA;;AAa2B;;AAAA;;AAI2B;;AAAA;;AAEvD;;AAAA;;AAM+D;;AAAA;;AAE/D;;AAAA;;AAUH;;AAAA;;AAU+B;;AAAA;;AAIjC;;AAAA,mGAA6B,aAA7B,EAA6B,GAA7B,EAA6B,oBAA7B,EAA6B,GAA7B;;AAEQ;;AAAA;;AAIgB;;AAAA;;AAG9B;;AAAA;;AAIA;;AAAA;;;;;;;;;sEDvDItB,uB,EAAuB;cALnC,uDAKmC;eALzB;AACTxH,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;gBAEjC,uD;iBAAU,a,EAAe;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;AEf5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACuBY;;AACI;;AAAoB;;AACkB;;AAAQ;;AAA8B;;AAAU;;AAC9E;;AAAQ;;AAA0B;;AAAS;;AACnD;;AACJ;;;;;;AAHkD;;AAAA;;AAC9B;;AAAA;;;;;;AAYpB;;AACI;;AAAgC;;AAAa;;AACjD;;;;;;AADoC;;AAAA;;;;;;AAM5C;;;;;;AAKA;;AACI;;AAAwB;;AAAY;;AACpC;;AAAoC;AAAA;AAAA;AAAA;;AAChC;;AAAyB;;AAAO;;AACpC;;AACJ;;AACA;;AACI;;AACJ;;AACA;;AACI;;AAAqC;AAAA;AAAA,0BAAe,KAAf;AAAoB,SAApB;;AAAuB;;AAAG;;AAC/D;;AAA0C;AAAA;AAAA,0BAAe,IAAf;AAAmB,SAAnB;;AAAsB;;AAAE;;AACtE;;;;QDjDS8K,oB;AAcX,oCAAmBnH,UAAnB,EAAkD4D,KAAlD,EAA0E3D,MAA1E,EAAwGC,MAAxG,EAA+H2D,aAA/H,EAA6J;AAAA;;AAAA;;AAA1I,aAAA7D,UAAA,GAAAA,UAAA;AAA+B,aAAA4D,KAAA,GAAAA,KAAA;AAAwB,aAAA3D,MAAA,GAAAA,MAAA;AAA8B,aAAAC,MAAA,GAAAA,MAAA;AAAuB,aAAA2D,aAAA,GAAAA,aAAA;AAZxH,aAAAnF,SAAA,GAAiB,+DAAOE,GAAP,CAAW,WAAX,CAAjB;AACA,aAAAgB,SAAA,GAAiB,+DAAOhB,GAAP,CAAW,WAAX,CAAjB;AACA,aAAAI,OAAA,GAAe,+DAAOJ,GAAP,CAAW,SAAX,CAAf;AACA,aAAAC,SAAA,GAAiB,+DAAOD,GAAP,CAAW,WAAX,CAAjB;AACA,aAAAyC,cAAA,GAAsB,EAAtB;AACA,aAAAoF,UAAA,GAAkB,EAAlB;AACA,aAAAW,mBAAA,GAA2B,EAA3B;AACA,aAAAC,cAAA,GAAsB,EAAtB;AACA,aAAA1H,cAAA,GAAsB,EAAtB;AAEA,aAAA2H,SAAA,GAAiB,KAAjB;;AAKA,aAAAZ,yBAAA,GAA4B,YAAM;AACvC,cAAI/I,IAAI,GAAG;AACTiC,qBAAS,EAAE,MAAI,CAACA,SADP;AAETlB,qBAAS,EAAE,MAAI,CAACA;AAFP,WAAX;;AAIA,gBAAI,CAACsB,UAAL,CAAgB0G,yBAAhB,CAA0C/I,IAA1C,EAAgDuD,SAAhD,CAA0D,UAACC,WAAD,EAAiB;AACzE,gBAAIA,WAAW,CAACC,MAAZ,KAAuB,GAA3B,EAAgC;AAC9B,oBAAI,CAACqF,UAAL,GAAkBtF,WAAW,CAACxD,IAA9B;AACA,oBAAI,CAAC4J,iBAAL,GAAyB,MAAI,CAAChF,aAAL,CAAmB,MAAI,CAACkE,UAAL,CAAgB,CAAhB,EAAmBjH,aAAtC,CAAzB;AACA,oBAAI,CAAC4H,mBAAL,GAA2B,MAAI,CAACX,UAAL,CAAgBe,GAAhB,CAAoB,UAACjG,CAAD;AAAA,uBAAQ;AAAEkG,mCAAiB,EAAElG,CAAC,CAACM,eAAvB;AAAwC6F,qCAAmB,EAAE,MAAI,CAACnF,aAAL,CAAmBhB,CAAC,CAACM,eAArB,CAA7D;AAAoGG,iCAAe,EAAET,CAAC,CAAC9B;AAAvH,iBAAR;AAAA,eAApB,CAA3B;AACD;AACF,WAND;AAOD,SAZM;;AAcA,aAAA+G,iBAAA,GAAoB,YAAM;AAC/B,cAAI7I,IAAI,GAAG;AACTiC,qBAAS,EAAE,MAAI,CAACA,SADP;AAETlB,qBAAS,EAAE,MAAI,CAACA;AAFP,WAAX;;AAIA,gBAAI,CAACsB,UAAL,CAAgBwG,iBAAhB,CAAkC7I,IAAlC,EAAwCuD,SAAxC,CAAkD,UAACC,WAAD,EAAiB;AACjE,gBAAIA,WAAW,CAACC,MAAZ,KAAuB,GAA3B,EAAgC;AAC9B,oBAAI,CAACiG,cAAL,GAAsBlG,WAAW,CAACxD,IAAlC;AACD;AACF,WAJD;AAKD,SAVM;;AAYA,aAAAgK,0BAAA,GAA6B,YAAM;AACxC,cAAIhK,IAAI,GAAG;AACTiC,qBAAS,EAAE,MAAI,CAACA,SADP;AAETlB,qBAAS,EAAE,MAAI,CAACA;AAFP,WAAX;;AAIA,gBAAI,CAACsB,UAAL,CAAgB2H,0BAAhB,CAA2ChK,IAA3C,EAAiDuD,SAAjD,CAA2D,UAACC,WAAD,EAAiB;AAC1E,gBAAIA,WAAW,CAACC,MAAZ,KAAuB,GAA3B,EAAgC;AAC9BD,yBAAW,CAACxD,IAAZ,CAAiBiK,OAAjB;AACAzG,yBAAW,CAACxD,IAAZ,CAAiB2D,OAAjB,CAAyB,UAAAC,CAAC;AAAA,uBAAI,MAAI,CAAC5B,cAAL,CAAoB6B,IAApB,CAAyBD,CAAC,CAAC5B,cAA3B,CAAJ;AAAA,eAA1B;AACD;AACF,WALD;AAMD,SAXM;;AAaA,aAAAkI,UAAA,GAAa,YAAM;AACxB,cAAIlK,IAAI,GAAG;AACTqB,mBAAO,EAAE,MAAI,CAACA,OADL;AAETC,wBAAY,EAAE,GAFL;AAGTP,qBAAS,EAAE,MAAI,CAACA;AAHP,WAAX;;AAKA,gBAAI,CAACsB,UAAL,CAAgBiB,eAAhB,CAAgCtD,IAAhC,EAAsCuD,SAAtC,CAAgD,UAACC,WAAD,EAAiB;AAC/D,gBAAIA,WAAW,CAACC,MAAZ,KAAuB,GAA3B,EAAgC;AAC9B,oBAAI,CAACC,cAAL,GAAsBF,WAAW,CAACxD,IAAlC;;AACA,kBAAI,MAAI,CAACiC,SAAT,EAAoB;AAClB,sBAAI,CAAC8G,yBAAL;;AACA,sBAAI,CAACF,iBAAL;;AACA,sBAAI,CAACmB,0BAAL;AACD;AACF;AACF,WATD;AAUD,SAhBM;;AAkBA,aAAApF,aAAA,GAAgB,UAACS,QAAD,EAAc;AACnC,cAAIG,aAAa,GAAG,MAAI,CAAC9B,cAAL,CAAoB+B,IAApB,CAAyB,UAAA7B,CAAC;AAAA,mBAAIA,CAAC,CAAC9C,MAAF,KAAauE,QAAjB;AAAA,WAA1B,CAApB;;AACA,2BAAUG,aAAa,CAACnF,SAAxB,cAAqCmF,aAAa,CAAClF,QAAnD;AACD,SAHM;;AAKA,aAAA6H,aAAA,GAAgB,YAAM;AAC3B,gBAAI,CAAC5F,MAAL,CAAY4H,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD,SAFM;;AAIA,aAAAC,aAAA,GAAgB,YAAM;AAC3B,cAAIpK,IAAI,GAAG;AACTiC,qBAAS,EAAE,MAAI,CAACA,SADP;AAETR,uBAAW,EAAE,MAAI,CAACiI,cAAL,CAAoBjI,WAFxB;AAGTV,qBAAS,EAAE,MAAI,CAACA;AAHP,WAAX;AAKA,gBAAI,CAAC4I,SAAL,GAAiB,IAAjB;;AACA,gBAAI,CAACtH,UAAL,CAAgBgI,sBAAhB,CAAuCrK,IAAvC,EAA6CuD,SAA7C,CAAuD,UAACC,WAAD,EAAiB;AACtE,kBAAI,CAACmG,SAAL,GAAiB,KAAjB;;AACA,gBAAInG,WAAW,CAACC,MAAZ,KAAuB,GAA3B,EAAgC;AAC9B,oBAAI,CAACnB,MAAL,CAAY0E,OAAZ,CAAoB,8BAApB,EAD8B,CAE9B;;;AACAC,oBAAM,CAACC,OAAP,CAAeC,IAAf;;AACA,oBAAI,CAAC2B,UAAL,CAAgBnF,OAAhB,CAAwB,UAACC,CAAD,EAAO;AAC7B,sBAAI,CAACwD,MAAL,CAAY,0BAAZ,EAAwCxD,CAAC,CAACM,eAA1C,EAA2D,MAAI,CAACwF,cAAL,CAAoBjI,WAA/E;AACD,eAFD;AAGD;;AACD,gBAAI+B,WAAW,CAAC6D,KAAhB,EAAuB;AACrB,oBAAI,CAAC/E,MAAL,CAAY+E,KAAZ,CAAkB,8BAAlB;AACD;AACF,WAbD;AAcD,SArBM;;AAuBA,aAAAiD,sBAAA,GAAyB,YAAM;AACpC,gBAAI,CAACrE,KAAL,CAAWsB,IAAX,CAAgB,MAAI,CAACgD,WAArB,EAAkC;AAAE9C,gBAAI,EAAE,IAAR;AAAc+C,oBAAQ,EAAE;AAAxB,WAAlC,EAAkEC,MAAlE,CAAyE3M,IAAzE,CAA8E,UAAC2M,MAAD,EAAY;AACxF,gBAAIA,MAAM,KAAK,KAAf,EAAsB,MAAI,CAACL,aAAL;AACvB,WAFD;AAGD,SAJM;;AAMA,aAAAhD,MAAA,GAAS,UAACqB,OAAD,EAAU3H,MAAV,EAAkBvC,KAAlB,EAA4B;AAC1C,gBAAI,CAAC2H,aAAL,CAAmBwC,IAAnB,CAAwB,gBAAxB,EAA0C;AAAED,mBAAO,EAAEA,OAAX;AAAoB3H,kBAAM,EAAEA,MAA5B;AAAoCvC,iBAAK,EAAEA;AAA3C,WAA1C;AACD,SAFM;;AAIA,aAAAmM,UAAA,GAAa,UAACC,IAAD,EAAU;AAC5B,cAAIC,UAAU,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAjB;AACA,cAAIG,SAAS,GAAGF,UAAU,CAACG,OAAX,EAAhB;AACA,cAAIC,UAAU,GAAG,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,EAAkD,KAAlD,EAAyD,KAAzD,EAAgE,KAAhE,EAAuE,KAAvE,EAA8E,KAA9E,CAAjB;AACA,cAAIC,UAAU,GAAGH,SAAS,GAAG,EAAZ,cAAqBA,SAArB,IAAmCA,SAApD;AACA,2BAAUE,UAAU,CAACJ,UAAU,CAACM,QAAX,EAAD,CAApB,cAA+CD,UAA/C,cAA6DL,UAAU,CAACO,WAAX,EAA7D;AACD,SANM;AAtGyJ;;;;mCA+GxJ;AACN,eAAKjB,UAAL;AACD;;;;;;;uBA/HUV,oB,EAAoB,wH,EAAA,oI,EAAA,yH,EAAA,uH,EAAA,8H;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;;;;;;;;;;;;;;;ACbjC;;AACA;;AACA;;AACA;;AACI;;AAAiB;;AAAa;;AAClC;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACI;;AAA6C;;AAA8B;;AAC3E;;AACI;;AAAQ;;AAAqB;;AAAU;;AAAK;;AAAQ;;AAAyB;;AAAU;;AAE3F;;AACA;;AACA;;AAAiC;;AAAwB;;AACzD;;AACA;;AACI;;AAAmC;;AAAa;;AAChD;;AACI;;AAMJ;;AACJ;;AACA;;AACA;;AACI;;AACI;;AAC+B;;AAAe;;AAClD;;AACA;;AACI;;AAGJ;;AACJ;;AACA;;AACA;;AAAyC;AAAA,mBAAS,IAAArB,aAAA,EAAT;AAAwB,WAAxB;;AAA0B;;AAAY;;AAC/E;;AACA;;AAAqC;AAAA,mBAAS,IAAAmC,sBAAA,EAAT;AAAiC,WAAjC;;AAAmC;;AAAc;;AAC1F;;AACA;;AACA;;;;AA7CqB;;AAAA;;AAQ4B;;AAAA;;AAEjC;;AAAA;;AAA4C;;AAAA;;AAAmC;;AAAA;;AAI1D;;AAAA;;AAKpB;;AAAA;;AAeA;;AAAA;;AAOP;;AAAA;;;;;;;;;sEDhCGd,oB,EAAoB;cALhC,uDAKgC;eALtB;AACThL,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;gBAe9B,uD;iBAAU,a,EAAe;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;AE5B5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACaI;;AAEI;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACA;;AAAmB;;AACqG;;AAClF;;AAAuB;;AAAO;;AAAO;;AAEvB;;AAAkB;;AAE1E;;;;;;;;AALY;;AAAA;;AAC8B;;AAAA;;AAEc;;AAAA;;;;QDP/C0M,qB;AAUX,qCAAmB/I,UAAnB,EAAkDC,MAAlD,EAAgFC,MAAhF,EAAgG;AAAA;;AAAA;;AAA7E,aAAAF,UAAA,GAAAA,UAAA;AAA+B,aAAAC,MAAA,GAAAA,MAAA;AAA8B,aAAAC,MAAA,GAAAA,MAAA;AAPzE,aAAAlB,OAAA,GAAe,+DAAOJ,GAAP,CAAW,SAAX,CAAf;AACA,aAAAC,SAAA,GAAiB,+DAAOD,GAAP,CAAW,WAAX,CAAjB;AACA,aAAAF,SAAA,GAAiB,+DAAOE,GAAP,CAAW,WAAX,CAAjB;;AAOA,aAAAoK,SAAA,GAAY,YAAM;AACvB,gBAAI,CAAC9I,MAAL,CAAY4H,QAAZ,CAAqB,CAAC,mBAAD,CAArB;AACD,SAFM;;AAIA,aAAAmB,UAAA,GAAa,YAAM;AACxB,yEAAOlL,GAAP,CAAW,WAAX,EAAwB,EAAxB;;AACA,gBAAI,CAACmC,MAAL,CAAY4H,QAAZ,CAAqB,CAAC,kBAAD,CAArB;AACD,SAHM;;AAKA,aAAAoB,qBAAA,GAAwB,YAAM;AACnC,cAAIvL,IAAI,GAAG;AACTqB,mBAAO,EAAE,MAAI,CAACA,OADL;AAETN,qBAAS,EAAE,MAAI,CAACA;AAFP,WAAX;;AAIA,gBAAI,CAACsB,UAAL,CAAgBkJ,qBAAhB,CAAsCvL,IAAtC,EAA4CuD,SAA5C,CAAsD,UAACC,WAAD,EAAiB;AACrE,kBAAI,CAACgI,QAAL,GAAgBhI,WAAW,CAACxD,IAA5B;AACD,WAFD;AAGD,SARM;;AAUA,aAAAyL,kBAAA,GAAqB,UAACzL,IAAD,EAAU;AACpC,yEAAOI,GAAP,CAAW,WAAX,EAAwBJ,IAAI,CAACiC,SAA7B;;AACA,gBAAI,CAACM,MAAL,CAAY4H,QAAZ,CAAqB,CAAC,eAAD,CAArB;AACD,SAHM;;AAKA,aAAAuB,YAAA,GAAe,YAAM;AAC1B,gBAAI,CAACnJ,MAAL,CAAY4H,QAAZ,CAAqB,CAAC,iBAAD,CAArB;AACD,SAFM;;AAIA,aAAAwB,eAAA,GAAkB,UAACxK,QAAD,EAAc;AACrC;AACA,cAAIA,QAAQ,KAAK,gBAAjB,EAAmC,OAAO,cAAP,CAAnC,KACK,IAAIA,QAAQ,KAAK,oBAAjB,EAAuC,OAAO,SAAP,CAAvC,KACA,IAAIA,QAAQ,KAAK,gBAAjB,EAAmC,OAAO,SAAP,CAAnC,KACA,IAAIA,QAAQ,KAAK,eAAjB,EAAkC,OAAO,UAAP,CAAlC,KACA,OAAO,gBAAP;AACN,SAPM;AA9B4F;;;;mCAuC3F;AACN,eAAKoK,qBAAL;AACD;;;;;;;uBAnDUH,qB,EAAqB,wH,EAAA,yH,EAAA,uH;AAAA,K;;;YAArBA,qB;AAAqB,wC;AAAA;AAAA;;;;;;;;;;;;;;;ACblC;;AACA;;AACA;;AACA;;AACI;;AAAiB;;AAAa;;AAC9B;;AAA8C;AAAA,mBAAS,IAAAE,UAAA,EAAT;AAAqB,WAArB;;AAAuB;;AAAW;;AAChF;;AAAsD;AAAA,mBAAS,IAAAI,YAAA,EAAT;AAAuB,WAAvB;;AAAyB;;AAAQ;;AACvF;;AAA8C;AAAA,mBAAS,IAAAL,SAAA,EAAT;AAAoB,WAApB;;AAAsB;;AAAY;;AACpF;;AACA;;AACA;;AACA;;AACA;;AACI;;AAUJ;;AACA;;;;AApBqB;;AAAA;;AASZ;;AAAA;;;;;;;;;sEDAID,qB,EAAqB;cALjC,uDAKiC;eALvB;AACT5M,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;gBAC/B,uD;iBAAU,W,EAAa;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;AEd1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACWI;;AAAiE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC7D;;AAAgB;;AACsG;;AAChF;;AAAmB;;AACzD;;AACJ;;;;;;;;AAHY;;AAAA;;AAC8B;;AAAA;;;;QDFjCkN,e;AAOX,+BAAmBvJ,UAAnB,EAAkD4D,KAAlD,EAA0E3D,MAA1E,EAAwGC,MAAxG,EAAwH;AAAA;;AAAA;;AAArG,aAAAF,UAAA,GAAAA,UAAA;AAA+B,aAAA4D,KAAA,GAAAA,KAAA;AAAwB,aAAA3D,MAAA,GAAAA,MAAA;AAA8B,aAAAC,MAAA,GAAAA,MAAA;AAHjG,aAAAxB,SAAA,GAAiB,+DAAOE,GAAP,CAAW,WAAX,CAAjB;;AAKA,aAAA4K,kBAAA,GAAqB,YAAM;AAChC,cAAI7L,IAAI,GAAG;AACTc,kBAAM,EAAE,MAAI,CAAC8F,QAAL,CAAc9F,MADb;AAETC,qBAAS,EAAE,MAAI,CAACA;AAFP,WAAX;;AAIA,gBAAI,CAACsB,UAAL,CAAgBwJ,kBAAhB,CAAmC7L,IAAnC,EAAyCuD,SAAzC,CAAmD,UAACC,WAAD,EAAiB;AAClE,kBAAI,CAACsI,MAAL,GAActI,WAAW,CAACxD,IAA1B;AACD,WAFD;AAGD,SARM;;AAUA,aAAA+L,QAAA,GAAW,YAAM;AACtB,gBAAI,CAACxJ,MAAL,CAAY4H,QAAZ,CAAqB,CAAC,YAAD,CAArB;AACD,SAFM;;AAIA,aAAA6B,gBAAA,GAAmB,UAAChM,IAAD,EAAU;AAClC,yEAAOI,GAAP,CAAW,SAAX,EAAsBJ,IAAI,CAACqB,OAA3B;AACA,yEAAOjB,GAAP,CAAW,WAAX,EAAwBJ,IAAI,CAACkB,SAA7B;;AACA,gBAAI,CAACqB,MAAL,CAAY4H,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACD,SAJM;;AAMA,aAAAwB,eAAA,GAAkB,UAACxK,QAAD,EAAc;AACrC,cAAIA,QAAQ,KAAK,WAAjB,EAA8B,OAAO,aAAP,CAA9B,KACK,IAAIA,QAAQ,KAAK,MAAjB,EAAyB,OAAO,SAAP,CAAzB,KACA,OAAO,UAAP;AACN,SAJM;AAtBoH;;;;mCA4BnH;AACN,eAAKyF,QAAL,GAAgB,KAAKvE,UAAL,CAAgB3C,2BAAhB,EAAhB;AACA,cAAI,CAAC,KAAKkH,QAAV,EAAoB,KAAKrE,MAAL,CAAY4H,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAApB,KACK,KAAK0B,kBAAL;AACN;;;;;;;uBAvCUD,e,EAAe,wH,EAAA,oI,EAAA,yH,EAAA,uH;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA;AAAA;;;;;;;;;;;;;;;ACZ5B;;AACA;;AACA;;AACA;;AACI;;AAAiB;;AAAM;;AACvB;;AAAyC;AAAA,mBAAS,IAAAG,QAAA,EAAT;AAAmB,WAAnB;;AAAqB;;AAAS;;AAC3E;;AACA;;AACA;;AACA;;AACA;;AACI;;AAMJ;;AACA;;;;AAPS;;AAAA;;;;;;;;;sEDCIH,e,EAAe;cAL3B,uDAK2B;eALjB;AACTpN,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;gBACzB,uD;iBAAU,Y,EAAc;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;AEb3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACgBQ;;AACI;;AAAoB;AAAA;;AAAA;;AAAA;AAAA,WAA6B,eAA7B,EAA6B;AAAA;;AAAA;;AAAA;AAAA,SAA7B;;AAApB;;AAEA;;AAAuD;;AAAY;;AACvE;;;;;;;;AAHsD;;AAAA;;AAAqB;;AAAoB;;AAAvE;;AAEgB;;AAAA;;AAAmB;;AAAA;;;;;;AAW3D;;;;QDnBKuN,iB;AAUX,iCAAmB5J,UAAnB,EAAkDC,MAAlD,EAAgFC,MAAhF,EAAgG;AAAA;;AAAA;;AAA7E,aAAAF,UAAA,GAAAA,UAAA;AAA+B,aAAAC,MAAA,GAAAA,MAAA;AAA8B,aAAAC,MAAA,GAAAA,MAAA;AARzE,aAAAxB,SAAA,GAAiB,+DAAOE,GAAP,CAAW,WAAX,CAAjB;AAEA,aAAAiL,eAAA,GAAuB,WAAvB;AACA,aAAA/K,QAAA,GAAgB,KAAK+K,eAArB;AACA,aAAA/F,UAAA,GAAkB,CAAC,WAAD,EAAc,MAAd,EAAsB,OAAtB,CAAlB;AAEA,aAAAC,SAAA,GAAiB,KAAjB;;AAIA,aAAA+F,MAAA,GAAS,YAAM;AACpB,cAAI,MAAI,CAACxF,cAAL,EAAJ,EAA2B;AACzB,gBAAI3G,IAAI,GAAG;AACTkB,uBAAS,EAAE,MAAI,CAACA,SADP;AAETC,sBAAQ,EAAE,MAAI,CAACA,QAFN;AAGTC,yBAAW,EAAE,MAAI,CAACA,WAHT;AAITN,oBAAM,EAAE,MAAI,CAAC8F,QAAL,CAAc9F,MAJb;AAKTO,qBAAO,EAAE,GALA;AAMTN,uBAAS,EAAE,MAAI,CAACA;AANP,aAAX;AAQA,kBAAI,CAACqF,SAAL,GAAiB,IAAjB;;AACA,kBAAI,CAAC/D,UAAL,CAAgB+J,0BAAhB,CAA2CpM,IAA3C,EAAiDuD,SAAjD,CAA2D,UAACC,WAAD,EAAiB;AAC1E,oBAAI,CAAC4C,SAAL,GAAiB,KAAjB;;AACA,kBAAI5C,WAAW,CAACC,MAAZ,KAAuB,GAA3B,EAAgC;AAC9B,sBAAI,CAACnB,MAAL,CAAY0E,OAAZ,CAAoB,4BAApB;;AACAC,sBAAM,CAACC,OAAP,CAAeC,IAAf,GAF8B,CAG9B;;AACA,+EAAO/G,GAAP,CAAW,SAAX,EAAsBoD,WAAW,CAACxD,IAAZ,CAAiBqB,OAAvC;AACA,+EAAOjB,GAAP,CAAW,WAAX,EAAwBoD,WAAW,CAACxD,IAAZ,CAAiBkB,SAAzC;AACD;;AACD,kBAAIsC,WAAW,CAAC6D,KAAhB,EAAuB;AACrB,sBAAI,CAAC/E,MAAL,CAAY+E,KAAZ,CAAkB,2BAAlB;AACD;AACF,aAZD;AAaD;AACF,SAzBM;;AA+BA,aAAAV,cAAA,GAAiB,YAAM;AAC5B,cAAI,CAAC,MAAI,CAACzF,SAAV,EAAqB,MAAI,CAACoB,MAAL,CAAYqG,OAAZ,CAAoB,+BAApB,EAArB,KAEK,OAAO,IAAP;AACN,SAJM;AAjC4F;;;;+BA6BrFb,K,EAAO;AACnB,eAAK3G,QAAL,GAAgB2G,KAAhB;AACD;;;mCAQO;AACN,eAAKlB,QAAL,GAAgB,KAAKvE,UAAL,CAAgB3C,2BAAhB,EAAhB;AACD;;;;;;;uBAnDUuM,iB,EAAiB,wH,EAAA,yH,EAAA,uH;AAAA,K;;;YAAjBA,iB;AAAiB,oC;AAAA,e;AAAA,a;AAAA,q4B;AAAA;AAAA;ACX9B;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEI;;AAA2C;;AAAS;;AACpD;;AACA;;AACI;;AAA6B;;AAAU;;AACvC;;AAAwC;AAAA;AAAA;;AAAxC;;AACJ;;AACA;;AACA;;AACI;;AAKJ;;AACA;;AACA;;AACI;;AAA+B;;AAAW;;AAC1C;;AAA+B;AAAA;AAAA;;AAClB;;AACjB;;AACA;;AACA;;AACI;;AACA;;AAAuD;AAAA,mBAAS,IAAAE,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAY;;AAC1F;;AACA;;AACJ;;AACA;;;;AAvBgD;;AAAA;;AAInC;;AAAA;;AAS0B;;AAAA;;AAKzB;;AAAA;;;;;;;;;sEDnBDF,iB,EAAiB;cAL7B,uDAK6B;eALnB;AACTzN,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEX9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACWI;;AACI;;AAAoB;;AAA+C;;AAAoC;;AACvG;;AACJ;;;;;;AAFuE;;AAAA;;;;;;AAgB/D;;AACI;;AACI;;AAEA;;AAA+D;;AAC1C;;AACzB;;AACJ;;;;;;AAL2E;;AAAA;;AAC/D;;AACgC;;AAAA;;AAA2B;;AAAA;;;;;;AAe3E;;;;;;;;AA5BJ;;AACI;;AAAwB;;AAAK;;AAC7B;;AAAsD;AAAA;AAAA;AAAA;;AAClD;;AAAyB;;AAAO;;AACpC;;AACJ;;AAEA;;AACI;;AACI;;AAQJ;;AAGJ;;AAEA;;AAEI;;AAAwD;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpD;;AACJ;;AAEA;;AAEJ;;;;;;AArBY;;AAAA;;AAmBH;;AAAA;;;;QDnCA2N,kB;AAaX,kCAAmBpG,KAAnB,EAA2C5D,UAA3C,EAAmE;AAAA;;AAAA;;AAAhD,aAAA4D,KAAA,GAAAA,KAAA;AAAwB,aAAA5D,UAAA,GAAAA,UAAA;AATpC,aAAAhB,OAAA,GAAe,+DAAOJ,GAAP,CAAW,SAAX,CAAf;AACA,aAAAC,SAAA,GAAiB,+DAAOD,GAAP,CAAW,WAAX,CAAjB;AACA,aAAAF,SAAA,GAAiB,+DAAOE,GAAP,CAAW,WAAX,CAAjB;AACA,aAAAqL,eAAA,GAAuB,EAAvB;AACA,aAAAhL,YAAA,GAAoB,EAApB;AACA,aAAAiL,MAAA,GAAc,KAAd;AACA,aAAAC,YAAA,GAAoB,CAApB;;AAKA,aAAAC,OAAA,GAAU,YAAM;AACrB,gBAAI,CAACC,kBAAL;;AACA,gBAAI,CAACzG,KAAL,CAAWsB,IAAX,CAAgB,MAAI,CAACoF,SAArB,EAAgC;AAAElF,gBAAI,EAAE;AAAR,WAAhC;AACD,SAHM;AAF+D;;;;iCAOtDwB,K,EAAO;AAAA;;AACrB,cAAIjJ,IAAI,GAAG;AACTkB,qBAAS,EAAE,EADF;AAETC,oBAAQ,EAAE,EAFD;AAGTC,uBAAW,EAAE,EAHJ;AAITN,kBAAM,EAAE,EAJC;AAKTO,mBAAO,EAAE,KAAKA,OALL;AAMTN,qBAAS,EAAE,KAAKA;AANP,WAAX;AAQA,cAAImI,WAAW,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,yBAA1B,CAAlB;;AACA,cAAIF,WAAW,CAACrC,MAAZ,GAAqB,CAAzB,EAA4B;AAC1BqC,uBAAW,CAACvF,OAAZ,CAAoB,UAACC,CAAD,EAAO;AACzB5D,kBAAI,CAAC,QAAD,CAAJ,GAAiB4D,CAAC,CAAC,OAAD,CAAlB;AACA,qBAAI,CAAC4I,YAAL;;AACA,qBAAI,CAACnK,UAAL,CAAgB+J,0BAAhB,CAA2CpM,IAA3C,EAAiDuD,SAAjD,CAA2D,UAACC,WAAD,EAAiB;AAC1E,oBAAI0F,WAAW,CAACrC,MAAZ,KAAuB,OAAI,CAAC2F,YAAhC,EAA8C;AAC5C,yBAAI,CAACI,eAAL;;AACA3D,uBAAK;AACN;AACF,eALD;AAMD,aATD;AAUD;AACF;;;6CAE2B;AAAA;;AAC1B,cAAIjJ,IAAI,GAAG;AACTqB,mBAAO,EAAE,KAAKA,OADL;AAETC,wBAAY,EAAE,GAFL;AAGTP,qBAAS,EAAE,KAAKA;AAHP,WAAX;AAKA,eAAKsB,UAAL,CAAgBiB,eAAhB,CAAgCtD,IAAhC,EAAsCuD,SAAtC,CAAgD,UAACC,WAAD,EAAiB;AAC/D,gBAAIA,WAAW,CAACC,MAAZ,KAAuB,GAA3B,EAAgC;AAC9B,qBAAI,CAAC6I,eAAL,GAAuB9I,WAAW,CAACxD,IAAnC;AACD;AACF,WAJD;AAKD;;;0CAEwB;AAAA;;AACvB,cAAIA,IAAI,GAAG;AACTqB,mBAAO,EAAE,KAAKA,OADL;AAETC,wBAAY,EAAE,GAFL;AAGTP,qBAAS,EAAE,KAAKA;AAHP,WAAX;AAKA,eAAKsB,UAAL,CAAgBiB,eAAhB,CAAgCtD,IAAhC,EAAsCuD,SAAtC,CAAgD,UAACC,WAAD,EAAiB;AAC/D,gBAAIA,WAAW,CAACC,MAAZ,KAAuB,GAA3B,EAAgC;AAC9B,qBAAI,CAACnC,YAAL,GAAoBkC,WAAW,CAACxD,IAAhC;AACD;AACF,WAJD;AAKD;;;mCAEO;AACN,eAAK4M,eAAL;AACD;;;;;;;uBAxEUP,kB,EAAkB,oI,EAAA,wH;AAAA,K;;;YAAlBA,kB;AAAkB,qC;AAAA;AAAA;;;;;;;;;;;;;;;ACZ/B;;AACA;;AACA;;AACA;;AACI;;AAAiB;;AAAa;;AAC9B;;AAA8C;AAAA,mBAAS,IAAAI,OAAA,EAAT;AAAkB,WAAlB;;AAAoB;;AAAU;;AAChF;;AACA;;AACA;;AACA;;AACA;;AACI;;AAIJ;;AACA;;AACA;;;;AAbqB;;AAAA;;AAOZ;;AAAA;;;;;;;;;sEDCIJ,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACT7N,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKoB,Q;;;;;;;;gBAE5B,uD;iBAAU,W,EAAa;AAAE,sBAAQ;AAAV,W;;;;;;;;;;;;;;;;;;;;AEd1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAMamO,W,GAEX,qBAAoBvN,IAApB,EAAgC;AAAA;;AAAA;;AAAZ,WAAAA,IAAA,GAAAA,IAAA;AAEb,WAAAwN,SAAA,GAAY,yBAAZ;;AAEA,WAAAC,WAAA,GAAc,UAACC,QAAD;AAAA,eAAmB,OAAI,CAAC1N,IAAL,CAAU2B,GAAV,WAAiB,OAAI,CAAC6L,SAAtB,kBACrCvJ,SADqC,CAC3B,UAAA0J,QAAQ;AAAA,iBAAID,QAAQ,CAACC,QAAQ,CAACC,IAAT,EAAD,CAAZ;AAAA,SADmB,CAAnB;AAAA,OAAd;;AAGA,WAAAC,cAAA,GAAiB,UAACH,QAAD;AAAA,eAAmB,OAAI,CAAC1N,IAAL,CAAU2B,GAAV,WAAiB,OAAI,CAAC6L,SAAtB,kBACxCvJ,SADwC,CAC9B,UAAA0J,QAAQ;AAAA,iBAAID,QAAQ,CAACC,QAAQ,CAACC,IAAT,EAAD,CAAZ;AAAA,SADsB,CAAnB;AAAA,OAAjB;AAP4B,K;;;uBAFxBL,W,EAAW,0G;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACV1K,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACNxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYaiL,e;AAGX,+BAAmB/K,UAAnB,EAAkDE,MAAlD,EAAyED,MAAzE,EAAuG4D,aAAvG,EAAqI;AAAA;;AAAA;;AAAlH,aAAA7D,UAAA,GAAAA,UAAA;AAA+B,aAAAE,MAAA,GAAAA,MAAA;AAAuB,aAAAD,MAAA,GAAAA,MAAA;AAA8B,aAAA4D,aAAA,GAAAA,aAAA;AADhG,aAAAnF,SAAA,GAAiB,+DAAOE,GAAP,CAAW,WAAX,CAAjB;;AAGA,aAAAoM,MAAA,GAAc,YAAM;AACzB,cAAIrN,IAAI,GAAG;AACTc,kBAAM,EAAE,OAAI,CAAC8F,QAAL,CAAc9F,MADb;AAETC,qBAAS,EAAE,OAAI,CAACA;AAFP,WAAX;;AAIA,iBAAI,CAACsB,UAAL,CAAgBgL,MAAhB,CAAuBrN,IAAvB,EAA6BuD,SAA7B,CAAuC,UAACC,WAAD,EAAiB;AACtD,gBAAIA,WAAW,CAACC,MAAZ,KAAuB,GAA3B,EAAgC;AAC9B,uFAAc,WAAd;AACA,uFAAc,YAAd;AACA9D,0BAAY,CAACM,OAAb,CAAqB,UAArB,EAAiC,EAAjC;;AACA,qBAAI,CAACsC,MAAL,CAAY4H,QAAZ,CAAqB,CAAC,OAAD,CAArB;;AACA,qBAAI,CAAC7H,MAAL,CAAYgL,IAAZ,CAAiB,0BAAjB;AACD;AACF,WARD;AASD,SAdM;AAFiI;;;;mCAmB7H;AAAA;;AACT,eAAK1G,QAAL,GAAgB,KAAKvE,UAAL,CAAgB3C,2BAAhB,EAAhB;AACA,eAAKwG,aAAL,CAAmBqH,MAAnB,CAA0B,YAA1B,EAAwChK,SAAxC,CAAkD,YAAM;AACtD,mBAAI,CAAC2C,aAAL,CAAmBwC,IAAnB,CAAwB,UAAxB,EAAoC,OAAI,CAAC3H,SAAzC;AACD,WAFD;AAGA,eAAKmF,aAAL,CAAmBqH,MAAnB,CAA0B,kBAA1B,EAA8ChK,SAA9C;AACA,eAAK2C,aAAL,CAAmBqH,MAAnB,CAA0B,KAAK3G,QAAL,CAAc9F,MAAxC,EAAgDyC,SAAhD,CAA0D,UAACC,WAAD,EAAiB;AACzE,mBAAI,CAAClB,MAAL,CAAYgL,IAAZ,CAAiB9J,WAAW,CAAC,SAAD,CAA5B,EAAyCA,WAAW,CAAC,OAAD,CAApD;AACD,WAFD;AAGD;;;;;;;uBA/BU4J,e,EAAe,wH,EAAA,uH,EAAA,yH,EAAA,8H;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,smB;AAAA;AAAA;ACZ5B;;AACI;;AAAmC;;AAAgB;;AACnD;;AACI;;AACI;;AAEI;;AACJ;;AACA;;AACI;;AAAyC;;AAA8C;;AACvF;;AAA0D;;AAA4D;;AACtH;;AACA;;AAAQ;AAAA,mBAAS,IAAAC,MAAA,EAAT;AAAiB,WAAjB;;AAAyD;;AAAO;;AAC5E;;AACJ;;AAEJ;;AACJ;;;;AAXgB;;AAAA;;AAGyC;;AAAA;;AACiB;;AAAA;;;;;;;;sEDE7DD,e,EAAe;cAL3B,uDAK2B;eALjB;AACT5O,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa8O,a;AAEX,6BAAmBnL,UAAnB,EAA2C;AAAA;;AAAA;;AAAxB,aAAAA,UAAA,GAAAA,UAAA;;AAEZ,aAAAoL,UAAA,GAAa,YAAM;AACxB,cAAI9N,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCiH,MAAjC,GAA0C,CAA9C,EAAiD;AAC/C,gBAAI7G,IAAI,GAAG;AACTc,oBAAM,EAAE,+DAAOG,GAAP,CAAW,YAAX,CADC;AAETF,uBAAS,EAAE,+DAAOE,GAAP,CAAW,WAAX;AAFF,aAAX;;AAIA,mBAAI,CAACoB,UAAL,CAAgBgL,MAAhB,CAAuBrN,IAAvB,EAA6BuD,SAA7B,CAAuC,UAACC,WAAD,EAAiB;AACtD,kBAAIA,WAAW,CAACC,MAAZ,KAAuB,GAA3B,EAAgC;AAC9B,yFAAc,WAAd;AACA,yFAAc,YAAd;AACD;AACF,aALD;AAMD;;AACD9D,sBAAY,CAACM,OAAb,CAAqB,UAArB,EAAiC,EAAjC;AACD,SAdM;AAFuC;;;;mCAkBnC;AACT,eAAKwN,UAAL;AACD;;;;;;;uBAtBUD,a,EAAa,+H;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,c;AAAA,a;AAAA,6M;AAAA;AAAA;ACT1B;;AACI;;AAA8C;;AAAgB;;AAC9D;;AAAqC;;AAAM;;AAC3C;;AAA0B;;AAAO;;AACrC;;;;;;;;sEDKaA,a,EAAa;cALzB,uDAKyB;eALf;AACThP,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;AET1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAgBagP,Y;;;;;YAAAA;;;;yBAAAA,Y;AAAY,O;AAAA,gBAPd,CACP,4DADO,CAOc;;;;0HAAZA,Y,EAAY;AAAA,uBARR,kEAQQ,EARO,wEAQP;AARsB,kBAE3C,4DAF2C,CAQtB;AANT,kBAGZ,kEAHY,EAGG,wEAHH;AAMS,O;AAHS,K;;;;;sEAGrBA,Y,EAAY;cATxB,sDASwB;eATf;AACRzO,sBAAY,EAAE,CAAC,kEAAD,EAAgB,wEAAhB,CADN;AAERC,iBAAO,EAAE,CACP,4DADO,CAFD;AAKRd,iBAAO,EAAE,CACP,kEADO,EACQ,wEADR;AALD,S;AASe,Q;;;;;;;;;;;;;;;;;;AChBzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWauP,a,GAOX,uBAAmBrO,IAAnB,EAAqC;AAAA;;AAAA;;AAAlB,WAAAA,IAAA,GAAAA,IAAA;AALZ,WAAAC,GAAA,oBAAgBC,QAAQ,CAACC,QAAzB;;AAYA,WAAA8N,MAAA,GAAS,UAACK,SAAD,EAAuB;AAErC,eAAO,IAAI,+CAAJ,CAAe,UAACC,QAAD,EAAc;AAElC,iBAAI,CAACC,MAAL,CAAYC,EAAZ,CAAeH,SAAf,EAA0B,UAAC5N,IAAD,EAAU;AAElC6N,oBAAQ,CAACG,IAAT,CAAchO,IAAd;AAED,WAJD;AAMD,SARM,CAAP;AAUD,OAZM;;AAgBA,WAAA0I,IAAA,GAAO,UAACkF,SAAD,EAAoB5N,IAApB,EAAkC;AAE9C,eAAI,CAAC8N,MAAL,CAAYpF,IAAZ,CAAiBkF,SAAjB,EAA4B5N,IAA5B;AAED,OAJM;;AArBL,WAAK8N,MAAL,GAAc,6CAAE,CAAC,KAAKvO,GAAN,CAAhB;AAED,K;;;uBAXUoO,a,EAAa,uH;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa;;;;;sEAAbA,a,EAAa;cADzB;AACyB,Q;;;;;;;;;;;;;;;;;;;;;;ACX1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACiBI;;AACI;;AAEJ;;;;;;;;AA4BgB;;AACI;;AAAiC;;AAAI;;AACrC;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AADJ;;AAEA;;AAAkE;;AAChC;;AACtC;;;;;;AAHQ;;AAAA;;;;;;;;AAIR;;AACI;;AAAwC;;AAAY;;AACpD;;AACI;AAAA;;AAAA;;AAAA;AAAA;;AADJ;;AAEJ;;;;;;AADQ;;AAAA;;;;;;;;AAER;;AACI;;AAA4C;;AAAoB;;AAChE;;AAC8B;AAAA;;AAAA;;AAAA;AAAA;;AAD9B;;AAEJ;;;;;;AADkC;;AAAA;;;;;;AAElC;;AACI;;AAEJ;;;;QDzDPM,c;AAWX,8BAAmB5L,UAAnB,EAAkDE,MAAlD,EAAyED,MAAzE,EAAgG;AAAA;;AAAA;;AAA7E,aAAAD,UAAA,GAAAA,UAAA;AAA+B,aAAAE,MAAA,GAAAA,MAAA;AAAuB,aAAAD,MAAA,GAAAA,MAAA;AAJlE,aAAA4L,OAAA,GAAe,KAAf;AACA,aAAAC,OAAA,GAAe,KAAf;AACA,aAAAC,WAAA,GAAmB,KAAnB;;AAIA,aAAAC,KAAA,GAAa,YAAM;AAExB,cAAI,CAAC,OAAI,CAAC5N,YAAV,EAAwB,OAAI,CAAC6B,MAAL,CAAYqG,OAAZ,CAAoB,iCAApB,EAAxB,KAEK,IAAI,CAAC,OAAI,CAACjI,QAAV,EAAoB,OAAI,CAAC4B,MAAL,CAAYqG,OAAZ,CAAoB,4BAApB,EAApB,KAEA;AACH,mBAAI,CAACuF,OAAL,GAAe,IAAf;AACA,gBAAIlO,IAAI,GAAG;AACTS,0BAAY,EAAE,OAAI,CAACA,YADV;AAETC,sBAAQ,EAAE,OAAI,CAACA;AAFN,aAAX;;AAIA,mBAAI,CAAC2B,UAAL,CAAgBgM,KAAhB,CAAsBrO,IAAtB,EAA4BuD,SAA5B,CAAsC,UAACC,WAAD,EAAiB;AACrD,qBAAI,CAAC0K,OAAL,GAAe,KAAf;;AACA,kBAAI1K,WAAW,CAACC,MAAZ,KAAuB,GAA3B,EAAgC;AAC9B,+EAAOrD,GAAP,CAAW,WAAX,EAAwBoD,WAAW,CAACxD,IAAZ,CAAiBe,SAAzC;AACA,+EAAOX,GAAP,CAAW,YAAX,EAAyBoD,WAAW,CAACxD,IAAZ,CAAiBsO,WAAjB,CAA6BxN,MAAtD;;AACA,uBAAI,CAACuB,UAAL,CAAgBtC,yBAAhB,CAA0CyD,WAAW,CAACxD,IAAZ,CAAiBsO,WAA3D;;AACA,uBAAI,CAAC/L,MAAL,CAAY4H,QAAZ,CAAqB,CAAC,SAAD,CAArB;;AACA,uBAAI,CAAC7H,MAAL,CAAYiM,IAAZ,mBAA4B/K,WAAW,CAACxD,IAAZ,CAAiBsO,WAAjB,CAA6BjO,SAAzD,cAAsEmD,WAAW,CAACxD,IAAZ,CAAiBsO,WAAjB,CAA6BhO,QAAnG;AACD;AACF,aATD,EASG,UAAC+G,KAAD,EAAW;AACZ,qBAAI,CAAC6G,OAAL,GAAe,KAAf;AACA,kBAAI7G,KAAK,CAAC5D,MAAN,IAAgB,GAApB,EAAyB,OAAI,CAACnB,MAAL,CAAY+E,KAAZ,CAAkB,uCAAlB,EAAzB,KAEK,IAAIA,KAAK,CAAC5D,MAAN,IAAgB,GAApB,EAAyB,OAAI,CAACnB,MAAL,CAAY+E,KAAZ,CAAkB,6BAAlB,EAAzB,KAEA,OAAI,CAAC/E,MAAL,CAAY+E,KAAZ,CAAkB,wBAAlB,EAA4C,QAA5C;AAEN,aAjBD;AAkBD;AACF,SA/BM;;AA2FA,aAAAmH,QAAA,GAAgB,UAACC,KAAD,EAAgB;AAErC,cAAIA,KAAK,CAACC,OAAN,KAAkB,EAAtB,EAA0B;AAAE;AAC1B,mBAAI,CAACL,KAAL;AACD;AACF,SALM;AA7F4F;;;;iCAmCtF;AAAA;;AACX,cAAI,CAAC,KAAK5N,YAAV,EAAwB,KAAK6B,MAAL,CAAYqG,OAAZ,CAAoB,yBAApB,EAAxB,KACK;AACH,iBAAKuF,OAAL,GAAe,IAAf;;AACA,gBAAI,CAAC,KAAKC,OAAN,IAAiB,CAAC,KAAKC,WAA3B,EAAwC;AACtC,mBAAK/L,UAAL,CAAgBsM,QAAhB,CAAyB,KAAKlO,YAA9B,EAA4C8C,SAA5C,CAAsD,UAACC,WAAD,EAAiB;AACrE,uBAAI,CAAC0K,OAAL,GAAe,KAAf;;AACA,oBAAI1K,WAAW,CAACC,MAAZ,KAAuB,GAA3B,EAAgC;AAC9B,yBAAI,CAAC0K,OAAL,GAAe,IAAf;;AACA,yBAAI,CAAC7L,MAAL,CAAYgL,IAAZ,CAAiB,oCAAjB;AACD;;AACD,oBAAI9J,WAAW,CAACvF,IAAZ,KAAqB,WAAzB,EAAsC;AACpC,yBAAI,CAACqE,MAAL,CAAY+E,KAAZ,CAAkB,2BAAlB;AACD;AACF,eATD;AAUD;;AACD,gBAAI,KAAK8G,OAAT,EAAkB;AAChB,kBAAInO,IAAI,GAAG;AACTS,4BAAY,EAAE,KAAKA,YADV;AAETO,6BAAa,EAAE,KAAKA;AAFX,eAAX;AAIA,mBAAKqB,UAAL,CAAgBuM,UAAhB,CAA2B5O,IAA3B,EAAiCuD,SAAjC,CAA2C,UAACC,WAAD,EAAiB;AAC1D,uBAAI,CAAC0K,OAAL,GAAe,KAAf;AACA,oBAAI,CAAC,OAAI,CAAClN,aAAV,EAAyB,OAAI,CAACsB,MAAL,CAAYqG,OAAZ,CAAoB,uBAApB,EAAzB,KACK;AACH,sBAAInF,WAAW,CAACC,MAAZ,KAAuB,GAA3B,EAAgC;AAC9B,2BAAI,CAACzC,aAAL,GAAqB,EAArB;AACA,2BAAI,CAACoN,WAAL,GAAmB,IAAnB;AACA,2BAAI,CAACD,OAAL,GAAe,KAAf;AACD;;AACD,sBAAI3K,WAAW,CAAC6D,KAAhB,EAAuB;AACrB,2BAAI,CAAC/E,MAAL,CAAY+E,KAAZ,CAAkB7D,WAAW,CAACiF,OAA9B;AACD;AACF;AACF,eAbD;AAcD;;AACD,gBAAI,KAAK2F,WAAT,EAAsB;AACpB,mBAAKF,OAAL,GAAe,KAAf;;AACA,kBAAI,KAAKW,WAAL,IAAoB,KAAKC,kBAA7B,EAAiD;AAC/C,oBAAI,KAAKD,WAAL,KAAqB,KAAKC,kBAA9B,EAAkD;AAChD,sBAAI9O,MAAI,GAAG;AACTS,gCAAY,EAAE,KAAKA,YADV;AAETC,4BAAQ,EAAE,KAAKmO;AAFN,mBAAX;AAIA,uBAAKxM,UAAL,CAAgB0M,0BAAhB,CAA2C/O,MAA3C,EAAiDuD,SAAjD,CAA2D,UAACC,WAAD,EAAiB;AAC1E2F,4BAAQ,CAAC6F,cAAT,CAAwB,cAAxB,EAAwCC,KAAxC;;AACA,2BAAI,CAAC3M,MAAL,CAAY0E,OAAZ,CAAoB,mCAApB;AACD,mBAHD;AAID,iBATD,MASO;AACL,uBAAK1E,MAAL,CAAY+E,KAAZ,CAAkB,yBAAlB;AACD;AACF,eAbD,MAaO;AACL,qBAAK/E,MAAL,CAAYqG,OAAZ,CAAoB,mCAApB;AACD;AACF;AACF;AACF;;;mCASU;AAAA;;AACTQ,kBAAQ,CAAC6F,cAAT,CAAwB,cAAxB,EAAwCE,gBAAxC,CAAyD,OAAzD,EAAkE,YAAM;AACtE,mBAAI,CAAChB,OAAL,GAAe,KAAf;AACA,mBAAI,CAACC,OAAL,GAAe,KAAf;AACD,WAHD;AAID;;;;;;;uBApHUF,c,EAAc,wH,EAAA,uH,EAAA,yH;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,ymE;AAAA;AAAA;ACX3B;;AACA;;AACA;;AACA;;AACA;;AACA;;AACI;;AAA2C;;AAAY;;AACvD;;AACA;;AACA;;AACI;;AAA8E;AAAA;AAAA;;AAA9E;;AAEJ;;AACA;;AACI;;AAAgF;AAAA;AAAA,aAAsB,SAAtB,EAAsB;AAAA,mBAC3F,IAAAO,QAAA,QAD2F;AAC3E,WADqD;;AAAhF;;AAEJ;;AACA;;AAIA;;AACI;;AAAqD;AAAA,mBAAS,IAAAH,KAAA,EAAT;AAAgB,WAAhB;;AAAkB;;AAAK;;AAChF;;AACA;;AACI;;AACuC;;AAAe;;AAC1D;;AACJ;;AAEA;;AAEI;;AACI;;AACI;;AACI;;AAAiD;;AAAe;;AAChE;;AACI;;AAAyB;;AAAO;;AACpC;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAkC;;AAAK;;AACvC;;AACI;AAAA;AAAA;;AADJ;;AAGJ;;AACA;;AAOA;;AAKA;;AAKA;;AAIJ;;AACJ;;AACA;;AACI;;AAAqD;AAAA,mBAAS,IAAAc,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAM;;AAClF;;AACJ;;AACJ;;AACJ;;;;AAlEsF;;AAAA;;AAIE;;AAAA;;AAG/E;;AAAA;;AA4BmB;;AAAA,gGAA0B,UAA1B,EAA0B,8BAA1B;;AAGH;;AAAA;;AAOA;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;;;;;;;;sEDtDZlB,c,EAAc;cAL1B,uDAK0B;eALhB;AACTzP,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEX3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgCY;;AAAiF;;AACjF;;;;;;AADoD;;AAA6B;;AAAA;;;;;;AAQ7E;;AACqB;;AAAe;;;;;;AAAf;;AAAA;;;;;;AAOjC;;AACI;;AAEJ;;;;QDvCS0Q,e;AAcX,+BAAmB/M,UAAnB,EAAkDrC,IAAlD,EAA4EuC,MAA5E,EAAmGD,MAAnG,EAA0H;AAAA;;AAAA;;AAAvG,aAAAD,UAAA,GAAAA,UAAA;AAA+B,aAAArC,IAAA,GAAAA,IAAA;AAA0B,aAAAuC,MAAA,GAAAA,MAAA;AAAuB,aAAAD,MAAA,GAAAA,MAAA;AAZ5F,aAAAjC,SAAA,GAAiB,EAAjB;AACA,aAAAC,QAAA,GAAgB,EAAhB;AAGA,aAAAK,WAAA,GAAmB,kBAAnB;AACA,aAAAC,YAAA,GAAoB,EAApB;AACA,aAAAsN,OAAA,GAAe,KAAf;AAEA,aAAAmB,WAAA,GAA6B,EAA7B;AACA,aAAAC,QAAA,GAA0B,EAA1B;AACA,aAAAC,eAAA,GAAiC,EAAjC;;AAKA,aAAAC,MAAA,GAAc,YAAM;AAEzB,cAAI,CAAC,OAAI,CAACnP,SAAV,EAAqB,OAAI,CAACiC,MAAL,CAAYqG,OAAZ,CAAoB,8BAApB,EAArB,KAEK,IAAI,CAAC,OAAI,CAACrI,QAAV,EAAoB,OAAI,CAACgC,MAAL,CAAYqG,OAAZ,CAAoB,6BAApB,EAApB,KAEA,IAAI,CAAC,OAAI,CAAClI,YAAV,EAAwB,OAAI,CAAC6B,MAAL,CAAYqG,OAAZ,CAAoB,yBAApB,EAAxB,KAEA,IAAI,CAAC,OAAI,CAACjI,QAAV,EAAoB,OAAI,CAAC4B,MAAL,CAAYqG,OAAZ,CAAoB,4BAApB,EAApB,KAEA,IAAI,CAAC,OAAI,CAAChI,WAAV,EAAuB,OAAI,CAAC2B,MAAL,CAAYqG,OAAZ,CAAoB,8BAApB,EAAvB,KAEA,IAAI,CAAC,OAAI,CAAC/H,YAAV,EAAwB,OAAI,CAAC0B,MAAL,CAAYqG,OAAZ,CAAoB,iCAApB,EAAxB,KAEA;AACH,mBAAI,CAACuF,OAAL,GAAe,IAAf;AACA,gBAAIlO,MAAI,GAAG;AACTK,uBAAS,EAAE,OAAI,CAACA,SADP;AAETC,sBAAQ,EAAE,OAAI,CAACA,QAFN;AAGTG,0BAAY,EAAE,OAAI,CAACA,YAHV;AAITC,sBAAQ,EAAE,OAAI,CAACA,QAJN;AAKTC,yBAAW,EAAE,OAAI,CAACA,WALT;AAMTC,0BAAY,EAAE,OAAI,CAACA;AANV,aAAX;;AAQA,mBAAI,CAACyB,UAAL,CAAgBmN,MAAhB,CAAuBxP,MAAvB,EAA6BuD,SAA7B,CAAuC,UAACC,WAAD,EAAiB;AACtD,qBAAI,CAAC0K,OAAL,GAAe,KAAf;AACA,kBAAI1K,WAAW,CAAC6D,KAAhB,EAAuB,OAAI,CAAC/E,MAAL,CAAY+E,KAAZ,CAAkB7D,WAAW,CAACiF,OAA9B;;AACvB,kBAAIjF,WAAW,CAACC,MAAZ,KAAuB,GAA3B,EAAgC;AAC9B,oBAAIzD,MAAI,GAAG;AACTS,8BAAY,EAAE,OAAI,CAACA,YADV;AAETC,0BAAQ,EAAE,OAAI,CAACA;AAFN,iBAAX;;AAIA,uBAAI,CAAC2B,UAAL,CAAgBgM,KAAhB,CAAsBrO,MAAtB,EAA4BuD,SAA5B,CAAsC,UAACC,WAAD,EAAiB;AACrD,sBAAIA,WAAW,CAACC,MAAZ,KAAuB,GAA3B,EAAgC;AAC9B,2BAAI,CAAClB,MAAL,CAAY4H,QAAZ,CAAqB,CAAC,SAAD,CAArB;;AACA,mFAAO/J,GAAP,CAAW,WAAX,EAAwBoD,WAAW,CAACxD,IAAZ,CAAiBe,SAAzC;AACA,mFAAOX,GAAP,CAAW,YAAX,EAAyBoD,WAAW,CAACxD,IAAZ,CAAiBsO,WAAjB,CAA6BxN,MAAtD;;AACA,2BAAI,CAACuB,UAAL,CAAgBtC,yBAAhB,CAA0CyD,WAAW,CAACxD,IAAZ,CAAiBsO,WAA3D,EAJ8B,CAK9B;;AACD;AACF,iBARD;AASD;AACF,aAlBD;AAmBD;AACF,SA5CM;AAFN;;;;+CAgD0B;AAAA;;AACzB,eAAKtO,IAAL,CAAUmN,cAAV,CAAyB,UAAAsC,SAAS,EAAI;AACpC,gBAAIC,YAAY,GAAGC,MAAM,CAACC,OAAP,CAAeH,SAAf,CAAnB;;AACA,8CAAoBC,YAApB;AAAK,kBAAIG,OAAO,qBAAX;;AAA6B,qBAAI,CAACR,WAAL,CAAiBxL,IAAjB,CAAsB;AAAExF,kBAAE,EAAEwR,OAAO,CAAC,CAAD,CAAb;AAAkBA,uBAAO,EAAEA,OAAO,CAAC,CAAD;AAAlC,eAAtB;AAAlC;AACD,WAHD;AAIA,eAAK7P,IAAL,CAAU+M,WAAV,CAAsB,UAAA+C,KAAK,EAAI;AAC7B,gBAAIC,SAAS,GAAGJ,MAAM,CAACC,OAAP,CAAeE,KAAf,CAAhB;;AACA,2CAAiBC,SAAjB;AAAK,kBAAI9R,IAAI,kBAAR;;AAAuB,qBAAI,CAACqR,QAAL,CAAczL,IAAd,CAAmB;AAAExF,kBAAE,EAAEJ,IAAI,CAAC,CAAD,CAAV;AAAeA,oBAAI,EAAEA,IAAI,CAAC,CAAD;AAAzB,eAAnB;AAA5B;;AACA,mBAAI,CAACsR,eAAL,GAAuB,OAAI,CAACF,WAAL,CAAiBxF,GAAjB,CAAqB,UAACmG,IAAD,EAAOzL,CAAP;AAAA,qBAAaoL,MAAM,CAACM,MAAP,CAAc,EAAd,EAAkBD,IAAlB,EAAwB,OAAI,CAACV,QAAL,CAAc/K,CAAd,CAAxB,CAAb;AAAA,aAArB,CAAvB;;AACA,mBAAI,CAACgL,eAAL,CAAqBW,IAArB,CAA0B,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAClC,kBAAID,CAAC,CAAC,SAAD,CAAD,GAAeC,CAAC,CAAC,SAAD,CAApB,EAAiC,OAAO,CAAC,CAAR;AACjC,kBAAID,CAAC,CAAC,SAAD,CAAD,GAAeC,CAAC,CAAC,SAAD,CAApB,EAAiC,OAAO,CAAP;AACjC,qBAAO,CAAP;AACD,aAJD;AAKD,WATD;AAUD;;;mCAEU;AACT,eAAKC,oBAAL;AACD;;;;;;;uBAlFUjB,e,EAAe,wH,EAAA,0H,EAAA,uH,EAAA,yH;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,+kD;AAAA;AAAA;ACZ5B;;AACA;;AACA;;AACA;;AACA;;AACI;;AAA2C;;AAA6B;;AACxE;;AACA;;AACI;;AAA8B;;AAAU;;AACxC;;AAA+E;AAAA;AAAA;;AAA/E;;AAEJ;;AACA;;AACI;;AAA6B;;AAAS;;AACtC;;AAA6E;AAAA;AAAA;;AAA7E;;AAEJ;;AACA;;AACI;;AAA0B;;AAAa;;AACvC;;AAA+E;AAAA;AAAA;;AAA/E;;AAEJ;;AACA;;AACI;;AAA6B;;AAAQ;;AACrC;;AAAiF;AAAA;AAAA;;AAAjF;;AAEJ;;AACA;;AACI;;AAA4B;;AAAO;;AACnC;;AACI;AAAA;AAAA;;AACA;;AAAiB;;AAAgB;;AACjC;;AAEJ;;AACJ;;AACA;;AACI;;AAA2B;;AAAa;;AACxC;;AACI;;AACI;;AAEJ;;AACA;;AAA+E;AAAA;AAAA;;AAA/E;;AAEJ;;AACJ;;AACA;;AACA;;AAIA;;AACI;;AAAmC;AAAA,mBAAS,IAAAI,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAO;;AACjE;;AACJ;;AACA;;;;AA/CuF;;AAAA;;AAKF;;AAAA;;AAKE;;AAAA;;AAKE;;AAAA;;AAM7E;;AAAA;;AAEQ;;AAAA;;AAQ2B;;AAAA;;AAG4C;;AAAA;;AAKlF;;AAAA;;;;;;;;;sEDpCIJ,e,EAAe;cAL3B,uDAK2B;eALjB;AACT5Q,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEZ5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QA0Ba4R,U;;;;;YAAAA;;;;yBAAAA,U;AAAU,O;AAAA,gBAXZ,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,4FAJO,EAKP,wDAAa1R,OAAb,EALO,EAMP,6DAAamH,QAAb,CAAsB,CACpB;AAAElH,YAAI,EAAE,QAAR;AAAkBC,iBAAS,EAAE;AAA7B,OADoB,CAAtB,CANO,CAWY;;;;0HAAVwR,U,EAAU;AAAA,uBAZN,wEAYM,EAZW,qEAYX;AAZyB,kBAE5C,4DAF4C,EAG5C,0DAH4C,EAI5C,kEAJ4C,EAK5C,4FAL4C,EAKrB,uDALqB,EAKrB,4DALqB;AAYzB,O;AAPI,K;;;;;sEAOdA,U,EAAU;cAbtB,sDAasB;eAbb;AACRrR,sBAAY,EAAE,CAAC,wEAAD,EAAkB,qEAAlB,CADN;AAERC,iBAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,kEAHO,EAIP,4FAJO,EAKP,wDAAaN,OAAb,EALO,EAMP,6DAAamH,QAAb,CAAsB,CACpB;AAAElH,gBAAI,EAAE,QAAR;AAAkBC,qBAAS,EAAE;AAA7B,WADoB,CAAtB,CANO;AAFD,S;AAaa,Q;;;;;;;;;;;;;;;;;;AC1BvB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMyR,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACtJ,KAAR,CAAcqJ,GAAd,CAAJ;AAAA,KADZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'Expense Splitter';\n\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HttpModule } from '@angular/http'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { UserModule } from './user/user.module';\nimport { SharedModule } from './shared/shared.module';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppService } from './app.service';\nimport { DataService } from './data.service';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './user/login/login.component';\nimport { SocketService } from './socket.service';\nimport { GroupsComponent } from './dashboard/groups/groups.component';\nimport { DashboardModule } from './dashboard/dashboard.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    HttpModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    UserModule,\n    SharedModule,\n    DashboardModule,\n    RouterModule.forRoot([\n      { path: 'login', component: LoginComponent, pathMatch: 'full' },\n      { path: 'groups', component: GroupsComponent, pathMatch: 'full' },\n      { path: '', redirectTo: 'login', pathMatch: 'full' },\n    ])\n  ],\n  providers: [AppService, DataService,SocketService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppService {\n\n  private url: String = `http://${location.hostname}:3000`;\n\n  constructor(public http: HttpClient) { }\n\n  public signUp(data): Observable<any> {\n    const params = new HttpParams()\n      .set('firstName', data.firstName)\n      .set('lastName', data.lastName)\n      .set('isAdmin', data.isAdmin)\n      .set('userName', data.userName)\n      .set('emailAddress', data.emailAddress)\n      .set('password', data.password)\n      .set('countryCode', data.countryCode)\n      .set('mobileNumber', data.mobileNumber);\n\n    return this.http.post(`${this.url}/api/v1/users/signup`, params);\n\n  }\n\n  public logIn(data): Observable<any> {\n    const params = new HttpParams()\n      .set('emailAddress', data.emailAddress)\n      .set('password', data.password);\n\n    return this.http.post(`${this.url}/api/v1/users/login`, params);\n  }\n\n  public getUserInfoFromLocalStorage: any = () => {\n    if (localStorage.getItem('userInfo'))\n      return JSON.parse(localStorage.getItem('userInfo'));\n  }\n\n  public setUserInfoToLocalStorage: any = (data) => {\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  }\n\n  public logOut(data): Observable<any> {\n    const params = new HttpParams()\n      .set('userId', data.userId)\n      .set('authToken', data.authToken);\n\n    return this.http.post(`${this.url}/api/v1/users/logout`, params);\n  }\n\n  public sendMail(emailAddress): Observable<any> {\n    const params = new HttpParams()\n      .set('emailAddress', emailAddress);\n\n    return this.http.post(`${this.url}/api/v1/users/forgotpassword`, params);\n  }\n\n  public verifyCode(data): Observable<any> {\n    const params = new HttpParams()\n      .set('emailAddress', data.emailAddress)\n      .set('verifyingCode', data.verifyingCode);\n\n    return this.http.post(`${this.url}/api/v1/users/verifycode`, params);\n  }\n\n  public findEmailAndUpdatePassword(data): Observable<any> {\n    const params = new HttpParams()\n      .set('emailAddress', data.emailAddress)\n      .set('password', data.password);\n\n    return this.http.post(`${this.url}/api/v1/users/updatepassword`, params);\n  }\n\n  public getAllGroupsByUser(data): Observable<any> {\n    return this.http.get(`${this.url}/api/v1/groups/${data.userId}/view/all?authToken=${data.authToken}`);\n  }\n\n  public addUserWithGroupOperations(data): Observable<any> {\n    const params = new HttpParams()\n      .set('groupName', data.groupName)\n      .set('category', data.category)\n      .set('description', data.description)\n      .set('userId', data.userId)\n      .set('authToken', data.authToken);\n\n    return this.http.post(`${this.url}/api/v1/groups/users/add/${data.groupId}`, params);\n  }\n\n  public getUsersByGroup(data): Observable<any> {\n    return this.http.get(`${this.url}/api/v1/groups/${data.groupId}/view/users/${data.usersInGroup}?authToken=${data.authToken}`);\n  }\n\n  public getAllExpensesByGroup(data): Observable<any> {\n    return this.http.get(`${this.url}/api/v1/expenses/${data.groupId}/view/all?authToken=${data.authToken}`);\n  }\n\n  public createExpenseAndAmount(data): Observable<any> {\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    const params = new HttpParams()\n      .set('expenseName', data.expenseName)\n      .set('category', data.category)\n      .set('amount', data.amount)\n      .set('transactionDate', data.transactionDate)\n      .set('notes', data.notes)\n      .set('groupId', data.groupId)\n      .set('lendingUserId', data.lendingUserId)\n      .set('lendingAmount', data.lendingAmount)\n      .set('borrowingData', JSON.stringify(data.borrowingData))\n      .set('expenseHistory', data.expenseHistory)\n      .set('authToken', data.authToken);\n\n    return this.http.post(`${this.url}/api/v1/expenses/create`, params, { headers: headers });\n  }\n\n  public getAmountDetailsByExpense(data): Observable<any> {\n    return this.http.get(`${this.url}/api/v1/expenses/${data.expenseId}/view/amount?authToken=${data.authToken}`);\n  }\n\n  public getExpenseDetails(data): Observable<any> {\n    return this.http.get(`${this.url}/api/v1/expenses/${data.expenseId}/view?authToken=${data.authToken}`);\n  }\n\n  public updateExpenseAndAmount(data): Observable<any> {\n    const headers = new HttpHeaders();\n    headers.append('Content-Type', 'application/json');\n    const params = new HttpParams()\n      .set('expenseId', data.expenseId)\n      .set('expenseName', data.expenseName)\n      .set('category', data.category)\n      .set('amount', data.amount)\n      .set('transactionDate', data.transactionDate)\n      .set('notes', data.notes)\n      .set('groupId', data.groupId)\n      .set('lendingUserId', data.lendingUserId)\n      .set('lendingAmount', data.lendingAmount)\n      .set('borrowingData', JSON.stringify(data.borrowingData))\n      .set('expenseHistoryData', JSON.stringify(data.expenseHistoryData))\n      .set('authToken', data.authToken);\n\n    return this.http.post(`${this.url}/api/v1/expenses/update`, params, { headers: headers });\n  }\n\n  public deleteExpenseAndAmount(data): Observable<any> {\n    const params = new HttpParams()\n      .set('expenseId', data.expenseId)\n      .set('expenseName', data.expenseName)\n      .set('authToken', data.authToken);\n\n    return this.http.post(`${this.url}/api/v1/expenses/delete`, params);\n  }\n\n  public getAmountDetailsByGroup(data): Observable<any> {\n    return this.http.get(`${this.url}/api/v1/groups/${data.groupId}/balances?authToken=${data.authToken}`);\n  }\n\n  public getHistoryDetailsByExpense(data): Observable<any> {\n    return this.http.get(`${this.url}/api/v1/expenses/${data.expenseId}/history?authToken=${data.authToken}`);\n  }\n\n\n}\n","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { AppService } from '../../app.service';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-balances',\n  templateUrl: './balances.component.html',\n  styleUrls: ['./balances.component.css']\n})\nexport class BalancesComponent implements OnInit {\n\n  public groupId: any = Cookie.get('groupId');\n  public groupName: any = Cookie.get('groupName');\n  public authToken: any = Cookie.get('authToken');\n  public expenses: any;\n  public membersInGroup: any;\n  public memberIds: any = [];\n  public borrowingInfo: any = [];\n  public borrowingObj: any = {};\n  public borrowingArr: any = [];\n  public totalBorrowingObj: any = {};\n  public lendingInfo: any = [];\n  public lendingObj: any = {};\n  public lendingArr: any = [];\n  public totalLendingObj: any = {};\n  public totalBalanceObj: any = {};\n  public totalBalanceArr: any = [];\n  public balanceObj: any = {};\n  public balanceArr: any = [];\n\n  constructor(public appService: AppService, public toastr: ToastrService, public router: Router) { }\n\n  public loadDetails = () => {\n    let data = {\n      groupId: this.groupId,\n      usersInGroup: 'Y',\n      authToken: this.authToken\n    }\n    this.appService.getUsersByGroup(data).subscribe((apiResponse) => {\n      if (apiResponse.status === 200) {\n        this.membersInGroup = apiResponse.data;\n        this.membersInGroup.forEach((x) => {\n          this.memberIds.push(x.userId);\n          this.borrowingObj[x.userId] = {};\n          this.lendingObj[x.userId] = {};\n          this.balanceObj[x.userId] = {};\n          this.totalBorrowingObj[x.userId] = 0;\n          this.totalLendingObj[x.userId] = 0;\n          this.membersInGroup.forEach((y) => {\n            if (x.userId !== y.userId) {\n              this.borrowingObj[x.userId][y.userId] = 0;\n              this.lendingObj[x.userId][y.userId] = 0;\n            }\n          })\n        });\n        let data = {\n          groupId: this.groupId,\n          authToken: this.authToken\n        }\n        this.appService.getAmountDetailsByGroup(data).subscribe((apiResponse) => {\n          this.memberIds.forEach((x) => {\n            let borrowedData = apiResponse.data.filter((y) => {\n              return y.borrowingUserId === x && y.lendingUserId !== x;\n            });\n            borrowedData.forEach((z) => {\n              this.borrowingObj[z.borrowingUserId][z.lendingUserId] = (this.borrowingObj[z.borrowingUserId][z.lendingUserId] || 0) + parseFloat(z.borrowingAmount);\n              this.totalBorrowingObj[z.borrowingUserId] = (this.totalBorrowingObj[z.borrowingUserId] || 0) + parseFloat(z.borrowingAmount);\n            });\n            let lendedData = apiResponse.data.filter((y) => {\n              return y.lendingUserId === x && y.borrowingUserId !== x;\n            });\n            lendedData.forEach((z) => {\n              this.lendingObj[z.lendingUserId][z.borrowingUserId] = (this.lendingObj[z.lendingUserId][z.borrowingUserId] || 0) + parseFloat(z.lendingAmount);\n              this.totalLendingObj[z.lendingUserId] = (this.totalLendingObj[z.lendingUserId] || 0) + parseFloat(z.lendingAmount);\n            });\n            this.totalBalanceObj[x] = this.totalLendingObj[x] - this.totalBorrowingObj[x];\n            lendedData.forEach((z) => {\n              this.balanceObj[x][z.borrowingUserId] = this.lendingObj[x][z.borrowingUserId] - this.borrowingObj[x][z.borrowingUserId];\n            });\n            borrowedData.forEach((z) => {\n              this.balanceObj[x][z.lendingUserId] = this.lendingObj[x][z.lendingUserId] - this.borrowingObj[x][z.lendingUserId];\n            });\n          });\n\n          for (let i in this.balanceObj) {\n            for (let j in this.balanceObj[i]) {\n              let amount = this.roundToTwoDigits(this.balanceObj[i][j]);\n              this.balanceArr.push({\n                firstMemberId: i,\n                firstMemberName: this.getMemberName(i),\n                firstPrompt: (() => {\n                  if (amount > 0) return 'gets back'\n                  else if (amount < 0) return 'owes'\n                  else return '';\n                })(),\n                balanceAmount: (() => {\n                  if (amount !== 0) return Math.abs(amount)\n                  else return '';\n                })(),\n                secondPrompt: (() => {\n                  if (amount > 0) return 'from'\n                  else if (amount < 0) return 'to'\n                  else return '';\n                })(),\n                secondMemberId: j,\n                secondMemberName: this.getMemberName(j),\n                thirdPrompt: (() => {\n                  if (amount !== 0) return 'in total'\n                  else return 'is settled up';\n                })()\n              });\n            }\n          }\n          for (let i in this.totalBalanceObj) {\n            let amount = this.roundToTwoDigits(this.totalBalanceObj[i]);\n            this.totalBalanceArr.push({\n              memberId: i,\n              memberName: this.getMemberName(i),\n              firstPrompt: (() => {\n                if (amount > 0) return 'gets back'\n                else if (amount < 0) return 'owes'\n                else return '';\n              })(),\n              balanceAmount: (() => {\n                if (amount !== 0) return Math.abs(amount)\n                else return '';\n              })(),\n              secondPrompt: (() => {\n                if (amount !== 0) return 'in total'\n                else return 'is settled up';\n              })()\n            });\n          }\n        });\n      }\n    });\n  }\n\n  public filterMember = (memberId) => {\n    return this.balanceArr.filter(x => x.firstMemberId === memberId);\n  }\n\n  public getMemberName = (memberId) => {\n    let memberDetails = this.membersInGroup.find(x => x.userId === memberId);\n    return `${memberDetails.firstName} ${memberDetails.lastName}`;\n  }\n\n  public roundToTwoDigits = (num) => {\n    return Math.round((parseFloat(num) + Number.EPSILON) * 100) / 100;\n  }\n\n  ngOnInit(): void {\n    this.loadDetails();\n  }\n\n}\n","<app-header></app-header>\n<br />\n<br />\n<div class=\"top-fixed p-3 pt-4\">\n    <span class=\"h4\">{{groupName}}</span>\n</div>\n<br />\n<br />\n<br />\n<div class=\"accordion layout centerize\" id=\"accordionExample\">\n    <div *ngFor=\"let totalBalance of totalBalanceArr\" class=\"card\">\n        <div class=\"card-header\">\n            <a data-toggle=\"collapse\" href=\"#{{totalBalance.memberId}}\" aria-expanded=\"false\" class=\"a-action\"\n                style=\"font-size: 1.1rem;\">{{totalBalance.memberName}} {{totalBalance.firstPrompt}}\n                <strong>{{totalBalance.balanceAmount}}</strong> {{totalBalance.secondPrompt}}</a>\n        </div>\n        <div *ngIf=\"totalBalance.balanceAmount\" id=\"{{totalBalance.memberId}}\" class=\"collapse show\">\n            <div *ngFor=\"let balance of filterMember(totalBalance.memberId)\">\n                <div class=\"list-group-item\">\n                    <p class=\"mb-0 p-1\"><span class=\"font-weight-normal\"\n                            style=\"vertical-align:middle\">{{balance.firstMemberName}} {{balance.firstPrompt}}\n                            <strong>{{balance.balanceAmount}}</strong>\n                            {{balance.secondPrompt}} {{balance.secondMemberName}} {{balance.thirdPrompt}}</span></p>\n                </div>\n            </div>\n        </div>\n    </div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { SharedModule } from '../shared/shared.module';\nimport { NgbModalModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrModule } from 'ngx-toastr';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\n\nimport { GroupsComponent } from './groups/groups.component';\nimport { GroupDetailsComponent } from './group-details/group-details.component';\nimport { NewGroupComponent } from './new-group/new-group.component';\nimport { UsersListComponent } from './users-list/users-list.component';\nimport { ExpenseDetailsComponent } from './expense-details/expense-details.component';\nimport { ExpenseViewComponent } from './expense-view/expense-view.component';\nimport { BalancesComponent } from './balances/balances.component';\n\n\n@NgModule({\n  declarations: [GroupsComponent, GroupDetailsComponent, NewGroupComponent, UsersListComponent, ExpenseDetailsComponent, ExpenseViewComponent, BalancesComponent],\n  imports: [\n    CommonModule,\n    SharedModule,\n    NgbModalModule,\n    FormsModule,\n    BrowserModule,\n    OwlDateTimeModule,\n    OwlNativeDateTimeModule,\n    ToastrModule.forRoot(),\n    RouterModule.forChild([\n      { path: 'groups', component: GroupsComponent },\n      { path: 'groups/view', component: GroupDetailsComponent },\n      { path: 'groups/new', component: NewGroupComponent },\n      { path: 'groups/view/users', component: UsersListComponent },\n      { path: 'expenses/details', component: ExpenseDetailsComponent },\n      { path: 'expenses/view', component: ExpenseViewComponent },\n      { path: 'groups/balances', component: BalancesComponent }\n    ]),\n  ]\n})\nexport class DashboardModule { }\n","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { AppService } from '../../app.service';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { SocketService } from '../../socket.service';\n\n@Component({\n  selector: 'app-expense-details',\n  templateUrl: './expense-details.component.html',\n  styleUrls: ['./expense-details.component.css']\n})\nexport class ExpenseDetailsComponent implements OnInit {\n\n  @ViewChild('memberModal', { static: true }) memberModal: TemplateRef<any>;\n\n  public authToken: any = Cookie.get('authToken');\n  public groupId: any = Cookie.get('groupId');\n  public groupName: any = Cookie.get('groupName');\n  public borrowingData: any = [];\n  public expenseName: any = \"\";\n  public category: any = \"Choose category..\";\n  public lendingUserId: any = \"Choose member..\";\n  public categories: any = [\"Food and Drink\", \"Home and Utilities\", \"Transportation\", \"Entertainment\", \"Other\"];\n  public amount: any = \"\";\n  public transactionDate: any = \"\";\n  public notes: any = \"\";\n  public lendingAmount: any;\n  public borrowingAmount: any;\n  public createInd: any = false;\n  public updateInd: any = false;\n  public membersInGroup: any;\n  public membersIncluded: any = [];\n  public membersIncludedIds: any = [];\n  public expenseId: any = Cookie.get('expenseId');\n  public userInfo: any;\n  public oldData: any;\n  public historyData: any = [];\n  public exisitngMemberIds: any = [];\n  public exisitnglendingUserId: any;\n\n  constructor(public appService: AppService, public toastr: ToastrService, public router: Router, public modal: NgbModal, public socketService: SocketService) { }\n\n  public createExpense = () => {\n    if (this.validateFields()) {\n      let expenseHistory = `${this.getMemberName(this.userInfo.userId)} created this expense`;\n      this.borrowingAmount = this.amount / this.membersIncluded.length;\n      for (let key of this.membersIncluded) this.borrowingData.push(\n        {\n          borrowingUserId: key.userId,\n          borrowingAmount: this.borrowingAmount\n        }\n      );\n      let data = {\n        expenseName: this.expenseName,\n        category: this.category,\n        amount: this.amount,\n        transactionDate: this.transactionDate,\n        notes: this.notes,\n        groupId: this.groupId,\n        lendingUserId: this.lendingUserId,\n        lendingAmount: this.borrowingAmount,\n        borrowingData: this.borrowingData,\n        expenseHistory: expenseHistory,\n        authToken: this.authToken\n      }\n      this.createInd = true;\n      this.appService.createExpenseAndAmount(data).subscribe((apiResponse) => {\n        this.createInd = false;\n        if (apiResponse.status === 200) {\n          this.toastr.success(\"Expense successfully added\");\n          // this.router.navigate(['groups/view']);\n          window.history.back();\n          this.membersIncludedIds.forEach((x) => {\n            this.notify(\"You have been added to the expense\", x, this.expenseName);\n          });\n        }\n        if (apiResponse.error) {\n          this.toastr.error(\"Failed to add an expense!\");\n        }\n      });\n    }\n  }\n\n\n  public loadExpenseDetails() {\n    this.userInfo = this.appService.getUserInfoFromLocalStorage();\n    let data = {\n      groupId: this.groupId,\n      usersInGroup: 'Y',\n      authToken: this.authToken\n    }\n    this.appService.getUsersByGroup(data).subscribe((apiResponse) => {\n      if (apiResponse.status === 200) {\n        this.membersInGroup = apiResponse.data;\n        if (this.expenseId) {\n          let expenseData = {\n            expenseId: this.expenseId,\n            authToken: this.authToken\n          }\n          this.appService.getExpenseDetails(expenseData).subscribe((apiResponse) => {\n            if (apiResponse.status === 200) {\n              this.oldData = apiResponse.data;\n              this.expenseName = apiResponse.data.expenseName;\n              this.category = apiResponse.data.category;\n              this.amount = apiResponse.data.amount;\n              this.transactionDate = apiResponse.data.transactionDate;\n              this.notes = apiResponse.data.notes;\n            }\n          });\n          let amountData = {\n            expenseId: this.expenseId,\n            authToken: this.authToken\n          }\n          this.appService.getAmountDetailsByExpense(amountData).subscribe((apiResponse) => {\n            if (apiResponse.status === 200) {\n              this.exisitnglendingUserId = apiResponse.data[0].lendingUserId;\n              this.lendingUserId = apiResponse.data[0].lendingUserId;\n              apiResponse.data.forEach((x) => {\n                let memberId = x.borrowingUserId;\n                this.exisitngMemberIds.push(memberId);\n                this.membersIncludedIds.push(memberId);\n                this.membersIncluded.push(\n                  {\n                    userId: memberId,\n                    fullName: this.getMemberName(memberId)\n                  }\n                );\n              });\n            }\n          });\n        }\n      }\n    });\n  }\n\n  public includeMember = () => {\n    this.modal.open(this.memberModal, { size: 'md' });\n  }\n\n  public includeMembers(close) {\n    let checkedList = document.querySelectorAll('.users-checkbox:checked');\n    if (checkedList.length > 0) {\n      checkedList.forEach((x) => {\n        let memberId = x['value'];\n        if (!this.membersIncludedIds.includes(memberId)) {\n          this.membersIncludedIds.push(memberId)\n          this.membersIncluded.push(\n            {\n              userId: memberId,\n              fullName: x.nextSibling.textContent\n            }\n          );\n        }\n      });\n    }\n    close();\n  }\n\n  public getMemberName = (memberId) => {\n    let memberDetails = this.membersInGroup.find(x => x.userId === memberId);\n    return `${memberDetails.firstName} ${memberDetails.lastName}`;\n  }\n\n  public removeMember = (memberId) => {\n    this.remove(this.membersIncludedIds, memberId);\n    this.membersIncluded = this.removeByAttr(this.membersIncluded, 'userId', memberId);\n  }\n\n  public remove = (arr, value) => {\n    let index = arr.indexOf(value);\n    if (index >= 0) {\n      arr.splice(index, 1);\n    }\n  }\n\n\n  public removeByAttr = (arr, attr, value) => {\n    let i = arr.length;\n    while (i--) {\n      if (arr[i][attr] === value)\n        arr.splice(i, 1);\n    }\n    return arr;\n  }\n\n  public updateExpense = () => {\n    if (this.validateFields()) {\n      this.borrowingAmount = this.amount / this.membersIncluded.length;\n      for (let key of this.membersIncluded) this.borrowingData.push(\n        {\n          borrowingUserId: key.userId,\n          borrowingAmount: this.borrowingAmount\n        });\n      this.trackChanges();\n      let data = {\n        expenseId: this.expenseId,\n        expenseName: this.expenseName,\n        category: this.category,\n        amount: this.amount,\n        transactionDate: this.transactionDate,\n        notes: this.notes,\n        groupId: this.groupId,\n        lendingUserId: this.lendingUserId,\n        lendingAmount: this.borrowingAmount,\n        borrowingData: this.borrowingData,\n        expenseHistoryData: this.historyData,\n        authToken: this.authToken\n      }\n      this.updateInd = true;\n      this.appService.updateExpenseAndAmount(data).subscribe((apiResponse) => {\n        this.updateInd = false;\n        if (apiResponse.status === 200) {\n          this.toastr.success(\"Expense successfully updated\");\n          // this.router.navigate(['expenses/view']);\n          window.history.back();\n          this.membersIncludedIds.forEach((x) => {\n            this.notify(\"Expense has been updated\", x, this.expenseName);\n          });\n        }\n        if (apiResponse.error) {\n          this.toastr.error(\"Failed to update an expense!\");\n        }\n      });\n    }\n  }\n\n  public trackChanges = () => {\n    if (this.exisitnglendingUserId !== this.lendingUserId) this.historyData.push(`${this.getMemberName(this.userInfo.userId)} updated the payer from ${this.getMemberName(this.exisitnglendingUserId)} to ${this.getMemberName(this.lendingUserId)}`);\n    if (this.oldData.amount !== this.amount) this.historyData.push(`${this.getMemberName(this.userInfo.userId)} updated the amount from ${this.oldData.amount} to ${this.amount}`);\n    if (this.oldData.transactionDate !== this.transactionDate) this.historyData.push(`${this.getMemberName(this.userInfo.userId)} updated the transaction date from ${this.oldData.transactionDate} to ${this.transactionDate}`);\n    if (this.oldData.category !== this.category) this.historyData.push(`${this.getMemberName(this.userInfo.userId)} updated the category`);\n    if (this.oldData.notes !== this.notes) this.historyData.push(`${this.getMemberName(this.userInfo.userId)} updated the notes`);\n    if (this.oldData.expenseName !== this.expenseName) this.historyData.push(`${this.getMemberName(this.userInfo.userId)} updated the expense name`);\n    this.membersIncludedIds.forEach((x) => {\n      if (!this.exisitngMemberIds.includes(x)) this.historyData.push(`${this.getMemberName(x)} was added to the expense`);\n    });\n    this.exisitngMemberIds.forEach((x) => {\n      if (!this.membersIncludedIds.includes(x)) this.historyData.push(`${this.getMemberName(x)} was removed from the expense`);\n    });\n  }\n\n  public notify = (message, userId, title) => {\n    this.socketService.emit('notify-updates', { message: message, userId: userId, title: title });\n  }\n\n  public validateFields = () => {\n    if (!this.expenseName) this.toastr.warning(\"Please provide the expense name\");\n\n    else if (this.category === \"Choose category..\") this.toastr.warning(\"Please select the category\");\n\n    else if (this.lendingUserId === \"Choose member..\") this.toastr.warning(\"Please select the payer\");\n\n    else if (this.membersIncludedIds.length === 0) this.toastr.warning(\"Please select the members to be included\");\n\n    else if (!this.amount) this.toastr.warning(\"Please provide the amount\");\n\n    else if (!this.transactionDate) this.toastr.warning(\"Please provide the transaction date\");\n\n    else return true;\n  }\n\n  ngOnInit(): void {\n    this.loadExpenseDetails();\n  }\n}\n","<app-header></app-header>\n<br />\n<br />\n<div class=\"top-fixed p-3 pt-4\">\n    <span class=\"h4\">{{groupName}}</span>\n</div>\n<br />\n<br />\n<br />\n<br />\n\n<form class=\"layout centerize\">\n\n    <h1 class=\"text-center font-weight-normal\">Expense</h1>\n    <br />\n    <div class=\"form-group centerize col-md-11\">\n        <label for=\"expense_expenseName\">Expense Name</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"expenseName\" name=\"expenseName\" id=\"expense_expenseName\">\n    </div>\n    <div class=\"form-group centerize col-md-11\">\n        <label for=\"expense_category\">Category</label>\n        <select id=\"expense_category\" class=\"form-control\" name=\"category\" [(ngModel)]=\"category\">\n            <option selected>Choose category..</option>\n            <option *ngFor=\"let category of categories\" value=\"{{category}}\">{{category}}\n            </option>\n        </select>\n    </div>\n    <div class=\"form-group centerize col-md-11\">\n        <label for=\"expense_lendingUser\">Payers</label>\n        <select id=\"expense_lendingUser\" class=\"form-control\" name=\"lendingUserId\" [(ngModel)]=\"lendingUserId\">\n            <option selected>Choose member..</option>\n            <option *ngFor=\"let user of membersInGroup\" value=\"{{user.userId}}\">{{user.firstName}} {{user.lastName}}\n            </option>\n        </select>\n    </div>\n    <div class=\"form-group centerize col-md-11 mb-0\">\n        <label for=\"expense_category\">Members Included</label>\n        <button class=\"btn btn-link float-right p-0\" (click)=\"includeMember()\">Include Member</button>\n    </div>\n    <div class=\"form-group centerize col-md-11\">\n        <div class=\"member-box\">\n            <div *ngFor=\"let member of membersIncluded\" class=\"list-group-item action\">\n                <p class=\"mb-0 p-1\"><span class=\"font-weight-normal\"\n                        style=\"vertical-align:middle\">{{member.fullName}}</span><i class=\"fa fa-times float-right\"\n                        (click)=\"removeMember(member.userId)\"></i>\n                </p>\n            </div>\n        </div>\n    </div>\n    <div class=\"form-group centerize col-md-11\">\n        <label for=\"expense_amount\">Amount</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"amount\" name=\"amount\" id=\"expense_amount\">\n    </div>\n    <div class=\"form-group centerize col-md-11\">\n        <label for=\"expense_transactionDate\">Transaction Date</label>\n        <input [(ngModel)]=\"transactionDate\" name=\"transactionDate\" [owlDateTime]=\"owlTransaction\"\n            [owlDateTimeTrigger]=\"owlTransaction\" class=\"form-control\" id=\"expense_transactionDate\">\n        <owl-date-time [pickerType]=\"'calendar'\" #owlTransaction></owl-date-time>\n    </div>\n    <div class=\"form-group centerize col-md-11\">\n        <label for=\"expense_notes\">Notes</label>\n        <textarea class=\"form-control\" [(ngModel)]=\"notes\" name=\"notes\" id=\"expense_notes\" rows=\"4\"></textarea>\n    </div>\n    <br />\n    <div *ngIf=\"!expenseId\" class=\"form-group centerize col-md-11\">\n        <span *ngIf=\"createInd\" class=\"spinner-border float-right\" role=\"status\"></span>\n        <button type=\"button\" class=\"btn btn-dark float-right\" (click)=\"createExpense()\">Add Expense</button>\n    </div>\n    <div *ngIf=\"expenseId\" class=\"form-group centerize col-md-11\">\n        <span *ngIf=\"updateInd\" class=\"spinner-border float-right\" role=\"status\"></span>\n        <button type=\"button\" class=\"btn btn-dark float-right\" (click)=\"updateExpense()\">Update Expense</button>\n    </div>\n    <br />\n</form>\n<br />\n\n<ng-template #memberModal let-close=\"close\">\n\n    <div class=\"modal-header\">\n        <h5 class=\"modal-title\">Members</h5>\n        <button type=\"button\" class=\"close\" id=\"close_button\" (click)=\"close()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n\n    <div class=\"modal-body\" style=\"height:600px\">\n        <ul class=\"list-group list-group-flush\">\n            <li *ngFor=\"let member of membersInGroup\" class=\"list-group-item\">\n                <div class=\"custom-control custom-checkbox\">\n                    <input type=\"checkbox\" class=\"custom-control-input users-checkbox\" id=\"user_{{member.userId}}\"\n                        value=\"{{member.userId}}\">\n                    <label class=\"custom-control-label\" for=\"user_{{member.userId}}\">{{member.firstName}}\n                        {{member.lastName}}</label>\n                </div>\n            </li>\n        </ul>\n\n\n    </div>\n\n    <div class=\"modal-footer\">\n\n        <button ngbAutofocus type=\"button\" class=\"btn btn-dark\" (click)=\"includeMembers(close)\">\n            Add\n        </button>\n\n    </div>\n\n</ng-template>","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { AppService } from '../../app.service';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\nimport { SocketService } from '../../socket.service';\n\n@Component({\n  selector: 'app-expense-view',\n  templateUrl: './expense-view.component.html',\n  styleUrls: ['./expense-view.component.css']\n})\nexport class ExpenseViewComponent implements OnInit {\n\n  public authToken: any = Cookie.get('authToken');\n  public expenseId: any = Cookie.get('expenseId');\n  public groupId: any = Cookie.get('groupId');\n  public groupName: any = Cookie.get('groupName');\n  public membersInGroup: any = [];\n  public amountData: any = [];\n  public borrowingMemberData: any = [];\n  public expenseDetails: any = {};\n  public expenseHistory: any = [];\n  public lendingMemberName: any;\n  public deleteInd: any = false;\n\n  constructor(public appService: AppService, public modal: NgbModal, public toastr: ToastrService, public router: Router, public socketService: SocketService) { }\n  @ViewChild('deleteModal', { static: true }) deleteModal: TemplateRef<any>;\n\n  public getAmountDetailsByExpense = () => {\n    let data = {\n      expenseId: this.expenseId,\n      authToken: this.authToken\n    }\n    this.appService.getAmountDetailsByExpense(data).subscribe((apiResponse) => {\n      if (apiResponse.status === 200) {\n        this.amountData = apiResponse.data;\n        this.lendingMemberName = this.getMemberName(this.amountData[0].lendingUserId);\n        this.borrowingMemberData = this.amountData.map((x) => ({ borrowingMemberId: x.borrowingUserId, borrowingMemberName: this.getMemberName(x.borrowingUserId), borrowingAmount: x.lendingAmount }));\n      }\n    });\n  }\n\n  public getExpenseDetails = () => {\n    let data = {\n      expenseId: this.expenseId,\n      authToken: this.authToken\n    }\n    this.appService.getExpenseDetails(data).subscribe((apiResponse) => {\n      if (apiResponse.status === 200) {\n        this.expenseDetails = apiResponse.data;\n      }\n    });\n  }\n\n  public getHistoryDetailsByExpense = () => {\n    let data = {\n      expenseId: this.expenseId,\n      authToken: this.authToken\n    }\n    this.appService.getHistoryDetailsByExpense(data).subscribe((apiResponse) => {\n      if (apiResponse.status === 200) {\n        apiResponse.data.reverse();\n        apiResponse.data.forEach(x => this.expenseHistory.push(x.expenseHistory));\n      }\n    });\n  }\n\n  public getMembers = () => {\n    let data = {\n      groupId: this.groupId,\n      usersInGroup: 'Y',\n      authToken: this.authToken\n    }\n    this.appService.getUsersByGroup(data).subscribe((apiResponse) => {\n      if (apiResponse.status === 200) {\n        this.membersInGroup = apiResponse.data;\n        if (this.expenseId) {\n          this.getAmountDetailsByExpense();\n          this.getExpenseDetails();\n          this.getHistoryDetailsByExpense();\n        }\n      }\n    });\n  }\n\n  public getMemberName = (memberId) => {\n    let memberDetails = this.membersInGroup.find(x => x.userId === memberId);\n    return `${memberDetails.firstName} ${memberDetails.lastName}`;\n  }\n\n  public updateExpense = () => {\n    this.router.navigate(['expenses/details'])\n  }\n\n  public deleteExpense = () => {\n    let data = {\n      expenseId: this.expenseId,\n      expenseName: this.expenseDetails.expenseName,\n      authToken: this.authToken\n    }\n    this.deleteInd = true;\n    this.appService.deleteExpenseAndAmount(data).subscribe((apiResponse) => {\n      this.deleteInd = false;\n      if (apiResponse.status === 200) {\n        this.toastr.success(\"Expense successfully deleted\");\n        // this.router.navigate(['groups/view']);\n        window.history.back();\n        this.amountData.forEach((x) => {\n          this.notify(\"Expense has been deleted\", x.borrowingUserId, this.expenseDetails.expenseName);\n        });\n      }\n      if (apiResponse.error) {\n        this.toastr.error(\"Failed to delete an expense!\");\n      }\n    });\n  }\n\n  public openDeleteConfirmation = () => {\n    this.modal.open(this.deleteModal, { size: 'md', centered: true }).result.then((result) => {\n      if (result === 'Yes') this.deleteExpense();\n    });\n  }\n\n  public notify = (message, userId, title) => {\n    this.socketService.emit('notify-updates', { message: message, userId: userId, title: title });\n  }\n\n  public formatDate = (date) => {\n    let dateFormat = new Date(date);\n    let monthDate = dateFormat.getDate();\n    let monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    let stringDate = monthDate < 10 ? `0${monthDate}` : monthDate;\n    return `${monthNames[dateFormat.getMonth()]} ${stringDate} ${dateFormat.getFullYear()}`;\n  }\n\n\n  ngOnInit(): void {\n    this.getMembers();\n  }\n\n}\n","<app-header></app-header>\n<br />\n<br />\n<div class=\"top-fixed p-3 pt-4\">\n    <span class=\"h4\">{{groupName}}</span>\n</div>\n<br />\n<br />\n<br />\n<br />\n\n<div class=\"layout centerize\">\n    <div class=\"text-center jumbotron display-4\">{{expenseDetails.expenseName}}</div>\n    <div style=\"font-size: 1.4rem;\" class=\"ml-2\">\n        <strong>{{lendingMemberName}}</strong> paid <strong>{{expenseDetails.amount}}</strong> on\n        {{formatDate(expenseDetails.transactionDate)}}\n    </div>\n    <br />\n    <div class=\"centerize col-md-11\">{{expenseDetails.notes}}</div>\n    <hr />\n    <div class=\"centerize col-md-11\">\n        <label class=\"mt-1 h6 mb-3\" for=\"\">Split Details</label>\n        <div class=\"member-box\">\n            <div *ngFor=\"let member of borrowingMemberData\" class=\"list-group-item action\">\n                <p class=\"mb-0 p-1\"><span class=\"font-weight-light\"\n                        style=\"vertical-align:middle\"><strong>{{member.borrowingMemberName}}</strong> owes\n                        <strong>{{member.borrowingAmount}}</strong></span>\n                </p>\n            </div>\n        </div>\n    </div>\n    <br />\n    <div id=\"accordion\" class=\"card\">\n        <div class=\"card-header\">\n            <a data-toggle=\"collapse\" href=\"#showHistory\" aria-expanded=\"false\" class=\"a-action\"\n                style=\"font-size: 1.1rem;\">Expense History</a>\n        </div>\n        <div id=\"showHistory\" class=\"collapse\" data-parent=\"#accordion\">\n            <div *ngFor=\"let history of expenseHistory\" class=\"card-body\">\n                <span class=\"font-weight-light\">- {{history}}</span>\n            </div>\n        </div>\n    </div>\n    <br />\n    <button class=\"btn btn-dark float-right\" (click)=\"updateExpense()\">Edit Expense</button>\n    <span *ngIf=\"deleteInd\" class=\"spinner-border float-left\" role=\"status\"></span>\n    <button class=\"btn btn-outline-dark\" (click)=\"openDeleteConfirmation()\">Delete Expense</button>\n</div>\n<br />\n<ng-template #deleteModal let-close=\"close\">\n    <div class=\"modal-header\">\n        <h5 class=\"modal-title\">Confirmation</h5>\n        <button type=\"button\" class=\"close\" (click)=\"close()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n    <div class=\"modal-body\">\n        Are yo sure you want to delete this expense?\n    </div>\n    <div class=\"modal-footer\">\n        <button class=\"btn btn-outline-dark\" (click)=\"close('Yes')\">Yes</button>\n        <button ngbAutofocus class=\"btn btn-dark\" (click)=\"close('No')\">No</button>\n    </div>\n</ng-template>","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { AppService } from '../../app.service';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-group-details',\n  templateUrl: './group-details.component.html',\n  styleUrls: ['./group-details.component.css']\n})\nexport class GroupDetailsComponent implements OnInit {\n  @ViewChild('userModal', { static: true }) userModal: TemplateRef<any>;\n\n  public groupId: any = Cookie.get('groupId');\n  public groupName: any = Cookie.get('groupName');\n  public authToken: any = Cookie.get('authToken');\n  public userId: any;\n  public expenses: any;\n\n\n  constructor(public appService: AppService, public toastr: ToastrService, public router: Router) { }\n\n  public viewUsers = () => {\n    this.router.navigate(['groups/view/users']);\n  }\n\n  public addExpense = () => {\n    Cookie.set('expenseId', \"\");\n    this.router.navigate(['expenses/details']);\n  }\n\n  public getAllExpensesByGroup = () => {\n    let data = {\n      groupId: this.groupId,\n      authToken: this.authToken\n    }\n    this.appService.getAllExpensesByGroup(data).subscribe((apiResponse) => {\n      this.expenses = apiResponse.data;\n    });\n  }\n\n  public goToExpenseDetails = (data) => {\n    Cookie.set('expenseId', data.expenseId);\n    this.router.navigate(['expenses/view']);\n  }\n\n  public goToBalances = () => {\n    this.router.navigate(['groups/balances']);\n  }\n\n  public getCategoryIcon = (category) => {\n    //[\"Food and Drink\", \"Home and Utilities\", \"Transportation\", \"Entertainment\", \"Other\"];\n    if (category === \"Food and Drink\") return \"fa-hamburger\"\n    else if (category === \"Home and Utilities\") return \"fa-home\"\n    else if (category === \"Transportation\") return \"fa-taxi\"\n    else if (category === \"Entertainment\") return \"fa-music\"\n    else return \"fa-info-circle\"\n  }\n\n  ngOnInit(): void {\n    this.getAllExpensesByGroup();\n  }\n\n}\n","<app-header></app-header>\n<br />\n<br />\n<div class=\"top-fixed p-3 pt-4\">\n    <span class=\"h4\">{{groupName}}</span>\n    <button class=\"btn btn-dark float-right mr-2\" (click)=\"addExpense()\">Add Expense</button>\n    <button class=\"btn btn-outline-dark float-right mr-2\" (click)=\"goToBalances()\">Balances</button>\n    <button class=\"btn btn-link float-right mr-2\" (click)=\"viewUsers()\">View Members</button>\n</div>\n<br />\n<br />\n<br />\n<div class=\"list-group-flush layout centerize\">\n    <div *ngFor=\"let expense of expenses\"\n        class=\"action list-group-item d-flex justify-content-between align-items-center\"\n        (click)=\"goToExpenseDetails(expense)\">\n        <span class=\"mb-0\"><i style=\"vertical-align:middle\"\n                class=\"fa {{getCategoryIcon(expense.category)}} fa-2x mr-4 blue p-3 white-text rounded \" aria-hidden=\"true\"></i><span class=\"h5\"\n                style=\"vertical-align:middle\">{{expense.expenseName}}</span></span><span\n            style=\"vertical-align:middle; font-size: 0.9rem;\"\n            class=\"badge badge-dark badge-pill float-right\">{{expense.amount}}</span>\n\n    </div>\n</div>\n<br />","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { AppService } from '../../app.service';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-groups',\n  templateUrl: './groups.component.html',\n  styleUrls: ['./groups.component.css']\n})\nexport class GroupsComponent implements OnInit {\n  @ViewChild('groupModal', { static: true }) groupModal: TemplateRef<any>;\n\n  public userInfo: any;\n  public authToken: any = Cookie.get('authToken');\n  public groups: any;\n\n  constructor(public appService: AppService, public modal: NgbModal, public toastr: ToastrService, public router: Router) { }\n\n  public getAllGroupsByUser = () => {\n    let data = {\n      userId: this.userInfo.userId,\n      authToken: this.authToken\n    }\n    this.appService.getAllGroupsByUser(data).subscribe((apiResponse) => {\n      this.groups = apiResponse.data;\n    })\n  }\n\n  public newGroup = () => {\n    this.router.navigate(['groups/new']);\n  }\n\n  public goToGroupDetails = (data) => {\n    Cookie.set('groupId', data.groupId);\n    Cookie.set('groupName', data.groupName);\n    this.router.navigate(['groups/view']);\n  }\n\n  public getCategoryIcon = (category) => {\n    if (category === \"Apartment\") return \"fa-building\"\n    else if (category === \"Trip\") return \"fa-taxi\"\n    else return \"fa-users\"\n  }\n\n  ngOnInit(): void {\n    this.userInfo = this.appService.getUserInfoFromLocalStorage();\n    if (!this.userInfo) this.router.navigate(['/login']);\n    else this.getAllGroupsByUser();\n  }\n\n}\n","<app-header></app-header>\n<br />\n<br />\n<div class=\"top-fixed p-3 pt-4\">\n    <span class=\"h4\">Groups</span>\n    <button class=\"btn btn-dark float-right\" (click)=\"newGroup()\">New Group</button>\n</div>\n<br />\n<br />\n<br />\n<div class=\"list-group-flush layout centerize\">\n    <div *ngFor=\"let group of groups\" class=\"list-group-item action\" (click)=\"goToGroupDetails(group)\">\n        <p class=\"mb-0\"><i style=\"vertical-align:middle\"\n                class=\"fa {{getCategoryIcon(group.category)}} fa-2x mr-4 blue p-3 white-text rounded \" aria-hidden=\"true\"></i><span class=\"h5\"\n                style=\"vertical-align:middle\">{{group.groupName}}</span>\n        </p>\n    </div>\n</div>\n<br />\n","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../../app.service';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-new-group',\n  templateUrl: './new-group.component.html',\n  styleUrls: ['./new-group.component.css']\n})\nexport class NewGroupComponent implements OnInit {\n  public userInfo: any;\n  public authToken: any = Cookie.get('authToken');\n  public groupName: any;\n  public defaultCategory: any = \"Apartment\";\n  public category: any = this.defaultCategory;\n  public categories: any = [\"Apartment\", \"Trip\", \"Other\"];\n  public description: any;\n  public createInd: any = false;\n\n  constructor(public appService: AppService, public toastr: ToastrService, public router: Router) { }\n\n  public create = () => {\n    if (this.validateFields()) {\n      let data = {\n        groupName: this.groupName,\n        category: this.category,\n        description: this.description,\n        userId: this.userInfo.userId,\n        groupId: '0',\n        authToken: this.authToken\n      }\n      this.createInd = true;\n      this.appService.addUserWithGroupOperations(data).subscribe((apiResponse) => {\n        this.createInd = false;\n        if (apiResponse.status === 200) {\n          this.toastr.success(\"Group successfully created\");\n          window.history.back();\n          // this.router.navigate(['groups/view']);\n          Cookie.set('groupId', apiResponse.data.groupId);\n          Cookie.set('groupName', apiResponse.data.groupName);\n        }\n        if (apiResponse.error) {\n          this.toastr.error(\"Failed to create a group!\");\n        }\n      });\n    }\n  }\n\n  public choose(value) {\n    this.category = value;\n  }\n\n  public validateFields = () => {\n    if (!this.groupName) this.toastr.warning(\"Please provide the group name\");\n\n    else return true;\n  }\n\n  ngOnInit(): void {\n    this.userInfo = this.appService.getUserInfoFromLocalStorage();\n  }\n\n}\n","<app-header></app-header>\n<br />\n<br />\n<br />\n<br />\n\n<form class=\"layout centerize\">\n\n    <h1 class=\"text-center font-weight-normal\">New Group</h1>\n    <br />\n    <div class=\"form-group centerize col-md-11\">\n        <label for=\"group_groupName\">Group Name</label>\n        <input type=\"text\" class=\"form-control\" [(ngModel)]=\"groupName\" name=\"groupName\" id=\"group_groupName\">\n    </div>\n    <br />\n    <div class=\"form-group centerize col-md-11\">\n        <div *ngFor=\"let category of categories\" class=\"custom-control custom-radio custom-control-inline\">\n            <input type=\"radio\" [(ngModel)]=\"defaultCategory\" value=\"{{category}}\" name=\"{{category}}\" id=\"{{category}}\"\n                class=\"custom-control-input\" (ngModelChange)=\"choose($event)\">\n            <label class=\"custom-control-label\" for=\"{{category}}\">{{category}}</label>\n        </div>\n    </div>\n    <br />\n    <div class=\"form-group centerize col-md-11\">\n        <label for=\"group_description\">Description</label>\n        <textarea class=\"form-control\" [(ngModel)]=\"description\" name=\"description\" id=\"group_description\"\n            rows=\"4\"></textarea>\n    </div>\n    <br />\n    <div class=\"form-group centerize col-md-11\">\n        <span *ngIf=\"createInd\" class=\"spinner-border float-right\" role=\"status\"></span>\n        <button type=\"button\" class=\"btn btn-dark float-right\" (click)=\"create()\">Create Group</button>\n    </div>\n    <br />\n</form>\n<br />","import { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\nimport { AppService } from '../../app.service';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ToastrService } from 'ngx-toastr';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.css']\n})\nexport class UsersListComponent implements OnInit {\n\n  @ViewChild('userModal', { static: true }) userModal: TemplateRef<any>;\n\n  public groupId: any = Cookie.get('groupId');\n  public groupName: any = Cookie.get('groupName');\n  public authToken: any = Cookie.get('authToken');\n  public usersNotInGroup: any = [];\n  public usersInGroup: any = [];\n  public addInd: any = false;\n  public countChecked: any = 0;\n\n\n  constructor(public modal: NgbModal, public appService: AppService) { }\n\n  public addUser = () => {\n    this.getUsersNotInGroup();\n    this.modal.open(this.userModal, { size: 'md' });\n  }\n\n  public addUsers(close) {\n    let data = {\n      groupName: \"\",\n      category: \"\",\n      description: \"\",\n      userId: \"\",\n      groupId: this.groupId,\n      authToken: this.authToken\n    }\n    let checkedList = document.querySelectorAll('.users-checkbox:checked');\n    if (checkedList.length > 0) {\n      checkedList.forEach((x) => {\n        data['userId'] = x['value'];\n        this.countChecked++;\n        this.appService.addUserWithGroupOperations(data).subscribe((apiResponse) => {\n          if (checkedList.length === this.countChecked) {\n            this.getUsersInGroup();\n            close();\n          }\n        });\n      });\n    }\n  }\n\n  public getUsersNotInGroup() {\n    let data = {\n      groupId: this.groupId,\n      usersInGroup: 'N',\n      authToken: this.authToken\n    }\n    this.appService.getUsersByGroup(data).subscribe((apiResponse) => {\n      if (apiResponse.status === 200) {\n        this.usersNotInGroup = apiResponse.data;\n      }\n    });\n  }\n\n  public getUsersInGroup() {\n    let data = {\n      groupId: this.groupId,\n      usersInGroup: 'Y',\n      authToken: this.authToken\n    }\n    this.appService.getUsersByGroup(data).subscribe((apiResponse) => {\n      if (apiResponse.status === 200) {\n        this.usersInGroup = apiResponse.data;\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    this.getUsersInGroup();\n  }\n\n}\n","<app-header></app-header>\n<br />\n<br />\n<div class=\"top-fixed p-3 pt-4\">\n    <span class=\"h4\">{{groupName}}</span>\n    <button class=\"btn btn-dark float-right mr-2\" (click)=\"addUser()\">Add Member</button>\n</div>\n<br />\n<br />\n<br />\n<div class=\"list-group-flush layout centerize\">\n    <div *ngFor=\"let user of usersInGroup\" class=\"list-group-item action\">\n        <p class=\"mb-0 p-3\"><span class=\"h5\" style=\"vertical-align:middle\">{{user.firstName}} {{user.lastName}}</span>\n        </p>\n    </div>\n</div>\n<br />\n<ng-template #userModal let-close=\"close\">\n\n    <div class=\"modal-header\">\n        <h5 class=\"modal-title\">Users</h5>\n        <button type=\"button\" class=\"close\" id=\"close_button\" (click)=\"close()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n    </div>\n\n    <div class=\"modal-body\" style=\"height:600px\">\n        <ul class=\"list-group list-group-flush\">\n            <li *ngFor=\"let user of usersNotInGroup\" class=\"list-group-item\">\n                <div class=\"custom-control custom-checkbox\">\n                    <input type=\"checkbox\" class=\"custom-control-input users-checkbox\" id=\"user_{{user.userId}}\"\n                        value=\"{{user.userId}}\">\n                    <label class=\"custom-control-label\" for=\"user_{{user.userId}}\">{{user.firstName}}\n                        {{user.lastName}}</label>\n                </div>\n            </li>\n        </ul>\n\n\n    </div>\n\n    <div class=\"modal-footer\">\n\n        <button ngbAutofocus type=\"button\" class=\"btn btn-dark\" (click)=\"addUsers(close)\">\n            Add\n        </button>\n\n        <div *ngIf=\"addInd\" class=\"spinner-border\" role=\"status\"> </div>\n\n    </div>\n\n</ng-template>","import { Injectable } from '@angular/core';\nimport { Http } from \"@angular/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  constructor(private http: Http) { }\n\n  public jsonFiles = '../../assets/JSON files';\n\n  public getCodeList = (callback: any) => this.http.get(`${this.jsonFiles}/phone.json`)\n    .subscribe(response => callback(response.json()));\n\n  public getCountryList = (callback: any) => this.http.get(`${this.jsonFiles}/names.json`)\n    .subscribe(response => callback(response.json()));\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../../app.service';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { SocketService } from '../../socket.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  public userInfo: any;\n  public authToken: any = Cookie.get('authToken');\n  constructor(public appService: AppService, public router: Router, public toastr: ToastrService, public socketService: SocketService) { }\n\n  public logOut: any = () => {\n    let data = {\n      userId: this.userInfo.userId,\n      authToken: this.authToken\n    }\n    this.appService.logOut(data).subscribe((apiResponse) => {\n      if (apiResponse.status === 200) {\n        Cookie.delete('authToken');\n        Cookie.delete('receiverId');\n        localStorage.setItem('userInfo', \"\");\n        this.router.navigate(['login']);\n        this.toastr.info(\"You have been logged out\");\n      }\n    });\n  }\n\n\n  ngOnInit() {\n    this.userInfo = this.appService.getUserInfoFromLocalStorage();\n    this.socketService.listen('verifyUser').subscribe(() => {\n      this.socketService.emit('set-user', this.authToken);\n    });\n    this.socketService.listen('online-user-list').subscribe();\n    this.socketService.listen(this.userInfo.userId).subscribe((apiResponse) => {\n      this.toastr.info(apiResponse['message'], apiResponse['title']);\n    });\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-dark fixed-top\">\n    <a class=\"navbar-brand text-white\">Expense Splitter</a>\n    <div class=\"ml-auto mr-2\">\n        <div class=\"nav-item dropdown\">\n            <a class=\"nav-link dropdown-toggle text-white\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\"\n                aria-haspopup=\"true\" aria-expanded=\"false\">\n                {{userInfo?.emailAddress}}\n            </a>\n            <div class=\"dropdown-menu dropdown-menu-right\" aria-labelledby=\"navbarDropdown\">\n                <h1 class=\"dropdown-item hover-override\">{{userInfo?.firstName}} {{userInfo?.lastName}}</h1>\n                <p class=\"dropdown-item font-weight-light hover-override\">Mobile: {{userInfo?.countryCode}} {{userInfo?.mobileNumber}}</p>\n                <div class=\"dropdown-divider\"></div>\n                <button (click)=\"logOut()\" class=\"btn btn-dark float-right mr-2\">Log out</button>\n            </div>\n        </div>\n\n    </div>\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { AppService } from 'src/app/app.service';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(public appService: AppService) { }\n\n  public initOnLoad = () => {\n    if (localStorage.getItem('userInfo').length > 0) {\n      let data = {\n        userId: Cookie.get('receiverId'),\n        authToken: Cookie.get('authToken')\n      }\n      this.appService.logOut(data).subscribe((apiResponse) => {\n        if (apiResponse.status === 200) {\n          Cookie.delete('authToken');\n          Cookie.delete('receiverId');\n        }\n      });\n    }\n    localStorage.setItem('userInfo', \"\");\n  }\n\n  ngOnInit() {\n    this.initOnLoad();\n  }\n\n}","<nav class=\"navbar navbar-expand-lg navbar-light bg-dark fixed-top\">\n    <div class=\"navbar-brand text-white\" href=\"#\">Expense Splitter</div>\n    <a href=\"login\" class=\"ml-auto mr-4\">Log in</a>\n    <a href=\"signup\" class=\"\">Sign up</a>\n</nav>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HomeComponent } from './home/home.component';\nimport { HeaderComponent } from './header/header.component';\n\n\n\n@NgModule({\n  declarations: [HomeComponent, HeaderComponent],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    HomeComponent, HeaderComponent\n  ]\n})\nexport class SharedModule { }\n","import { Injectable } from '@angular/core';\n\n\nimport * as io from 'socket.io-client';\n\nimport { Observable } from 'rxjs';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\n\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\nexport class SocketService {\n\n  public url = `http://${location.hostname}:3000`;\n\n  public socket;\n\n\n  constructor(public http: HttpClient) {\n\n    this.socket = io(this.url);\n\n  }\n\n\n  public listen = (eventName: string) => {\n\n    return new Observable((observer) => {\n\n      this.socket.on(eventName, (data) => {\n\n        observer.next(data);\n\n      });\n\n    });\n\n  }\n\n\n\n  public emit = (eventName: string, data: any) => {\n\n    this.socket.emit(eventName, data);\n\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../../app.service';\nimport { Router } from '@angular/router';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  public emailAddress: any;\n  public password: any;\n  public verifyingCode: any;\n  public newPassword: any;\n  public confirmNewPassword: any;\n  public spinInd: any = false;\n  public codeInd: any = false;\n  public passwordInd: any = false;\n\n  constructor(public appService: AppService, public router: Router, public toastr: ToastrService) { }\n\n  public logIn: any = () => {\n\n    if (!this.emailAddress) this.toastr.warning(\"Please enter your Email Address\");\n\n    else if (!this.password) this.toastr.warning(\"Please enter your Password\");\n\n    else {\n      this.spinInd = true;\n      let data = {\n        emailAddress: this.emailAddress,\n        password: this.password\n      }\n      this.appService.logIn(data).subscribe((apiResponse) => {\n        this.spinInd = false;\n        if (apiResponse.status === 200) {\n          Cookie.set('authToken', apiResponse.data.authToken);\n          Cookie.set('receiverId', apiResponse.data.userDetails.userId);\n          this.appService.setUserInfoToLocalStorage(apiResponse.data.userDetails);\n          this.router.navigate(['/groups']);\n          this.toastr.show(`Welcome ${apiResponse.data.userDetails.firstName} ${apiResponse.data.userDetails.lastName}!`);\n        }\n      }, (error) => {\n        this.spinInd = false;\n        if (error.status == 404) this.toastr.error(\"No user found with the provided email\");\n\n        else if (error.status == 400) this.toastr.error(\"Your password is incorrect!\");\n\n        else this.toastr.error(\"Error while logging in\", \"Error!\");\n\n      });\n    }\n  }\n\n  public submit(): any {\n    if (!this.emailAddress) this.toastr.warning(\"Please enter your Email\");\n    else {\n      this.spinInd = true;\n      if (!this.codeInd && !this.passwordInd) {\n        this.appService.sendMail(this.emailAddress).subscribe((apiResponse) => {\n          this.spinInd = false;\n          if (apiResponse.status === 200) {\n            this.codeInd = true;\n            this.toastr.info(\"A code has been sent to your email\");\n          }\n          if (apiResponse.code === \"EENVELOPE\") {\n            this.toastr.error(\"Email address is invalid!\")\n          }\n        });\n      }\n      if (this.codeInd) {\n        let data = {\n          emailAddress: this.emailAddress,\n          verifyingCode: this.verifyingCode\n        }\n        this.appService.verifyCode(data).subscribe((apiResponse) => {\n          this.spinInd = false;\n          if (!this.verifyingCode) this.toastr.warning(\"Please enter the code\")\n          else {\n            if (apiResponse.status === 200) {\n              this.verifyingCode = \"\";\n              this.passwordInd = true;\n              this.codeInd = false;\n            }\n            if (apiResponse.error) {\n              this.toastr.error(apiResponse.message);\n            }\n          }\n        });\n      }\n      if (this.passwordInd) {\n        this.spinInd = false;\n        if (this.newPassword && this.confirmNewPassword) {\n          if (this.newPassword === this.confirmNewPassword) {\n            let data = {\n              emailAddress: this.emailAddress,\n              password: this.newPassword\n            }\n            this.appService.findEmailAndUpdatePassword(data).subscribe((apiResponse) => {\n              document.getElementById(\"close_button\").click();\n              this.toastr.success(\"New password successfully changed\");\n            });\n          } else {\n            this.toastr.error(\"Passwords doesn't match\");\n          }\n        } else {\n          this.toastr.warning(\"Please provide both the passwords\");\n        }\n      }\n    }\n  }\n\n  public enterKey: any = (event: any) => {\n\n    if (event.keyCode === 13) { // For Enter.\n      this.logIn();\n    }\n  }\n\n  ngOnInit() {\n    document.getElementById(\"close_button\").addEventListener(\"click\", () => {\n      this.spinInd = false;\n      this.codeInd = false;\n    });\n  }\n\n}\n","<app-home></app-home>\n<br />\n<br />\n<br />\n<br />\n<form class=\"layout centerize\">\n    <h1 class=\"text-center font-weight-normal\">Welcome Back</h1>\n    <br />\n    <br />\n    <div class=\"form-group centerize col-md-11\">\n        <input type=\"email\" class=\"form-control\" id=\"login_email\" name=\"emailAddress\" [(ngModel)]=\"emailAddress\"\n            placeholder=\"Email\">\n    </div>\n    <div class=\"form-group centerize col-md-11\">\n        <input type=\"password\" class=\"form-control\" id=\"login_password\" name=\"password\" [(ngModel)]=\"password\"\n        (keydown)=\"enterKey($event)\" placeholder=\"Password\">\n    </div>\n    <div *ngIf=\"spinInd\" class=\"text-center\">\n        <div class=\"spinner-border\" role=\"status\">\n        </div>\n    </div>\n    <div class=\"form-group centerize col-md-11\">\n        <button type=\"button\" class=\"btn btn-dark btn-block\" (click)=\"logIn()\">Login</button>\n    </div>\n    <div class=\"form-group centerize col-md-11\">\n        <a href=\"\" class=\"password-link font-weight-light float-right\" data-toggle=\"modal\"\n            data-target=\"#forgotPasswordModal\">Forgot Password</a>\n    </div>\n</form>\n\n<div class=\"modal fade\" id=\"forgotPasswordModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"forgotPasswordLabel\"\n    aria-hidden=\"true\" data-backdrop=\"static\" data-keyboard=\"false\">\n    <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"forgotPasswordLabel\">Forgot Password</h5>\n                <button type=\"button\" class=\"close\" id=\"close_button\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <form>\n                    <div class=\"form-group centerize\">\n                        <label for=\"forgotpassword_email\">Email</label>\n                        <input type=\"email\" class=\"form-control\" id=\"forgotpassword_email\" name=\"emailAddress\"\n                            [(ngModel)]=\"emailAddress\" [readonly]=\"codeInd || passwordInd\"\n                            placeholder=\"Enter your email\">\n                    </div>\n                    <div *ngIf=\"codeInd\" class=\"form-group centerize\">\n                        <label for=\"forgotpassword_code\">Code</label>\n                        <input type=\"text\" class=\"form-control\" id=\"forgotpassword_code\" name=\"verifyingCode\"\n                            [(ngModel)]=\"verifyingCode\" aria-describedby=\"forgotpassword_code_hint\">\n                        <small id=\"forgotpassword_code_hint\" class=\"form-text text-muted\">Please provide the code that\n                            is sent in the mentioned Email</small>\n                    </div>\n                    <div *ngIf=\"passwordInd\" class=\"form-group centerize\">\n                        <label for=\"forgotpassword_newpassword\">New Password</label>\n                        <input type=\"password\" class=\"form-control\" id=\"forgotpassword_newpassword\" name=\"newPassword\"\n                            [(ngModel)]=\"newPassword\">\n                    </div>\n                    <div *ngIf=\"passwordInd\" class=\"form-group centerize\">\n                        <label for=\"forgotpassword_confirmpassword\">Confirm New Password</label>\n                        <input type=\"password\" class=\"form-control\" id=\"forgotpassword_confirmpassword\"\n                            name=\"confirmNewPassword\" [(ngModel)]=\"confirmNewPassword\">\n                    </div>\n                    <div *ngIf=\"spinInd\" class=\"text-center\">\n                        <div class=\"spinner-border\" role=\"status\">\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-dark btn-block\" (click)=\"submit()\">Submit</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AppService } from '../../app.service';\nimport { DataService } from '../../data.service'\nimport { Router } from '@angular/router';\nimport { Cookie } from 'ng2-cookies/ng2-cookies';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  public firstName: any = \"\";\n  public lastName: any = \"\";\n  public emailAddress: any;\n  public password: any;\n  public countryCode: any = \"Choose country..\";\n  public mobileNumber: any = \"\";\n  public spinInd: any = false;\n\n  public countryList: Array<Object> = [];\n  public codeList: Array<Object> = [];\n  public countryCodeList: Array<Object> = [];\n\n  constructor(public appService: AppService, public data: DataService, public router: Router, public toastr: ToastrService) {\n  }\n\n  public signUp: any = () => {\n\n    if (!this.firstName) this.toastr.warning(\"Please enter your First Name\");\n\n    else if (!this.lastName) this.toastr.warning(\"Please enter your Last Name\");\n\n    else if (!this.emailAddress) this.toastr.warning(\"Please enter your Email\");\n\n    else if (!this.password) this.toastr.warning(\"Please enter your Password\");\n\n    else if (!this.countryCode) this.toastr.warning(\"Please fill the Country Code\");\n\n    else if (!this.mobileNumber) this.toastr.warning(\"Please enter your Mobile Number\");\n\n    else {\n      this.spinInd = true;\n      let data = {\n        firstName: this.firstName,\n        lastName: this.lastName,\n        emailAddress: this.emailAddress,\n        password: this.password,\n        countryCode: this.countryCode,\n        mobileNumber: this.mobileNumber\n      }\n      this.appService.signUp(data).subscribe((apiResponse) => {\n        this.spinInd = false;\n        if (apiResponse.error) this.toastr.error(apiResponse.message);\n        if (apiResponse.status === 200) {\n          let data = {\n            emailAddress: this.emailAddress,\n            password: this.password\n          }\n          this.appService.logIn(data).subscribe((apiResponse) => {\n            if (apiResponse.status === 200) {\n              this.router.navigate(['/groups']);\n              Cookie.set('authToken', apiResponse.data.authToken);\n              Cookie.set('receiverId', apiResponse.data.userDetails.userId);\n              this.appService.setUserInfoToLocalStorage(apiResponse.data.userDetails);\n              //this.toastr.show(`Welcome ${apiResponse.data.userDetails.userName}!`);\n            }\n          })\n        }\n      });\n    }\n  }\n\n  public fetchCountryCodeList(): any {\n    this.data.getCountryList(countries => {\n      let countryArray = Object.entries(countries);\n      for (let country of countryArray) this.countryList.push({ id: country[0], country: country[1] });\n    });\n    this.data.getCodeList(codes => {\n      let codeArray = Object.entries(codes);\n      for (let code of codeArray) this.codeList.push({ id: code[0], code: code[1] });\n      this.countryCodeList = this.countryList.map((item, i) => Object.assign({}, item, this.codeList[i]));\n      this.countryCodeList.sort((a, b) => {\n        if (a['country'] < b['country']) return -1;\n        if (a['country'] > b['country']) return 1;\n        return 0;\n      });\n    });\n  }\n\n  ngOnInit() {\n    this.fetchCountryCodeList();\n  }\n}\n\n\n","<app-home></app-home>\n<br />\n<br />\n<br />\n<form class=\"layout centerize\">\n    <h1 class=\"text-center font-weight-normal\">Register for Expense Splitter</h1>\n    <br />\n    <div class=\"form-group centerize col-md-11\">\n        <label for=\"signup_firstname\">First Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"signup_firstname\" name=\"firstName\" [(ngModel)]=\"firstName\"\n            placeholder=\"First Name\">\n    </div>\n    <div class=\"form-group centerize col-md-11\">\n        <label for=\"signup_lastname\">Last Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"signup_lastname\" name=\"lastName\" [(ngModel)]=\"lastName\"\n            placeholder=\"Last Name\">\n    </div>\n    <div class=\"form-group centerize col-md-11\">\n        <label for=\"signup_email\">Email Address</label>\n        <input type=\"email\" class=\"form-control\" id=\"signup_email\" name=\"emailAddress\" [(ngModel)]=\"emailAddress\"\n            placeholder=\"Email Address (e.g. example@mail.com)\">\n    </div>\n    <div class=\"form-group centerize col-md-11\">\n        <label for=\"signup_password\">Password</label>\n        <input type=\"password\" class=\"form-control\" id=\"signup_password\" name=\"password\" [(ngModel)]=\"password\"\n            placeholder=\"Password\">\n    </div>\n    <div class=\"form-group centerize col-md-11\">\n        <label for=\"signup_country\">Country</label>\n        <select id=\"signup_country\" class=\"form-control\" #country name=\"countryCode\"\n            [(ngModel)]=\"countryCode\">\n            <option selected>Choose country..</option>\n            <option *ngFor=\"let countryCode of countryCodeList\" value=\"{{countryCode.code}}\">{{countryCode.country}}\n            </option>\n        </select>\n    </div>\n    <div class=\"centerize col-md-11\">\n        <label for=\"signup_mobile\">Mobile Number</label>\n        <div class=\"input-group mb-3\">\n            <div class=\"input-group-prepend\">\n                <span class=\"input-group-text\" *ngIf=\"(countryCode !== 'Choose country..') && (countryCode !== '')\"\n                    id=\"signup_code\">{{countryCode}}</span>\n            </div>\n            <input type=\"text\" class=\"form-control\" id=\"signup_mobile\" name=\"mobileNumber\" [(ngModel)]=\"mobileNumber\"\n                placeholder=\"Mobile Number (e.g. 1234567890)\">\n        </div>\n    </div>\n    <br />\n    <div *ngIf=\"spinInd\" class=\"centerize col-md-11 col-3\">\n        <div class=\"spinner-border\" role=\"status\">\n        </div>\n    </div>\n    <div class=\"form-group centerize col-md-11\">\n        <button class=\"btn btn-dark col-3\" (click)=\"signUp()\">Sign up</button>\n    </div>\n</form>\n<br />","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { FormsModule } from '@angular/forms'\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\n\nimport { SignupComponent } from './signup/signup.component';\nimport { LoginComponent } from './login/login.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { ToastrModule } from 'ngx-toastr';\n\n\n\n@NgModule({\n  declarations: [SignupComponent, LoginComponent],\n  imports: [\n    CommonModule,\n    FormsModule,\n    SharedModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot(),\n    RouterModule.forChild([\n      { path: 'signup', component: SignupComponent }\n    ])\n  ]\n})\nexport class UserModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"]}